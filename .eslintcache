[{"F:\\ChuyenDeWeb2\\foofaq\\src\\components\\QuestionGridViewManager\\index.js":"1","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\EventsGridViewManager\\index.js":"2","F:\\ChuyenDeWeb2\\foofaq\\src\\helpers\\index.js":"3","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\QuestionCard\\index.js":"4","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\QuestionManager\\index.js":"5","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\QuestionApprovalCard\\index.js":"6","F:\\ChuyenDeWeb2\\foofaq\\src\\index.js":"7","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\NavigationBar\\index.js":"8","F:\\ChuyenDeWeb2\\foofaq\\src\\pages\\EventList\\index.js":"9","F:\\ChuyenDeWeb2\\foofaq\\src\\pages\\FormManager\\index.js":"10","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\JobsGridViewManager\\index.js":"11","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\JobsGridView\\index.js":"12","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\FormManager\\Jobs.js":"13","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\FormManager\\Categories.js":"14","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\EventCard\\index.js":"15","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\AnswerForm\\index.js":"16","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\QuestionInfoDetail\\index.js":"17","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\QuestionForm\\index.js":"18","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\CategoriesInput\\index.js":"19","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\Dialog\\index.js":"20","F:\\ChuyenDeWeb2\\foofaq\\src\\pages\\QuestionManager\\index.js":"21","F:\\ChuyenDeWeb2\\foofaq\\src\\pages\\Login\\index.js":"22","F:\\ChuyenDeWeb2\\foofaq\\src\\pages\\QuestionApproval\\index.js":"23","F:\\ChuyenDeWeb2\\foofaq\\src\\pages\\QuestionCreateForm\\index.js":"24","F:\\ChuyenDeWeb2\\foofaq\\src\\provider\\login-sample.js":"25","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\QuestionAnswerDetail\\index.js":"26","F:\\ChuyenDeWeb2\\foofaq\\src\\common\\PageLayout\\index.js":"27","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\SearchBar\\index.js":"28","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\CategoryCard\\index.js":"29","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\NavigationBar\\NavTag\\index.js":"30","F:\\ChuyenDeWeb2\\foofaq\\src\\pages\\QuestionList\\index.js":"31","F:\\ChuyenDeWeb2\\foofaq\\src\\pages\\QuestionDetail\\index.js":"32","F:\\ChuyenDeWeb2\\foofaq\\src\\common\\CustomLink.js":"33","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\HeaderAsideNavbar\\index.js":"34","F:\\ChuyenDeWeb2\\foofaq\\src\\pages\\QuestionCategoryList\\index.js":"35","F:\\ChuyenDeWeb2\\foofaq\\src\\reducers\\index.js":"36","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\CategoriesGridView\\index.js":"37","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\EventSearchBar\\index.js":"38","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\AdvancedFilter\\index.js":"39","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\CategoriesGridViewManager\\index.js":"40"},{"size":8359,"mtime":1607949215068,"results":"41","hashOfConfig":"42"},{"size":3734,"mtime":1607713652317,"results":"43","hashOfConfig":"42"},{"size":5972,"mtime":1607949075037,"results":"44","hashOfConfig":"42"},{"size":5288,"mtime":1607869853563,"results":"45","hashOfConfig":"42"},{"size":4955,"mtime":1607390878709,"results":"46","hashOfConfig":"42"},{"size":9197,"mtime":1607932014882,"results":"47","hashOfConfig":"42"},{"size":3100,"mtime":1607907187072,"results":"48","hashOfConfig":"42"},{"size":7619,"mtime":1607714208590,"results":"49","hashOfConfig":"42"},{"size":2154,"mtime":1607519824672,"results":"50","hashOfConfig":"42"},{"size":1210,"mtime":1607519824691,"results":"51","hashOfConfig":"42"},{"size":2146,"mtime":1607714208590,"results":"52","hashOfConfig":"42"},{"size":3166,"mtime":1607714208590,"results":"53","hashOfConfig":"42"},{"size":5332,"mtime":1607267199191,"results":"54","hashOfConfig":"42"},{"size":3605,"mtime":1607432106317,"results":"55","hashOfConfig":"42"},{"size":1640,"mtime":1607519824456,"results":"56","hashOfConfig":"42"},{"size":3194,"mtime":1607907186946,"results":"57","hashOfConfig":"42"},{"size":6119,"mtime":1607907186960,"results":"58","hashOfConfig":"42"},{"size":7679,"mtime":1607907276086,"results":"59","hashOfConfig":"42"},{"size":959,"mtime":1607907186950,"results":"60","hashOfConfig":"42"},{"size":1929,"mtime":1607712416879,"results":"61","hashOfConfig":"42"},{"size":1795,"mtime":1607832851187,"results":"62","hashOfConfig":"42"},{"size":1278,"mtime":1606785837014,"results":"63","hashOfConfig":"42"},{"size":782,"mtime":1607519824789,"results":"64","hashOfConfig":"42"},{"size":538,"mtime":1607390879322,"results":"65","hashOfConfig":"42"},{"size":2894,"mtime":1606720442498,"results":"66","hashOfConfig":"42"},{"size":2404,"mtime":1607907186960,"results":"67","hashOfConfig":"42"},{"size":409,"mtime":1607390879141,"results":"68","hashOfConfig":"42"},{"size":530,"mtime":1607390879149,"results":"69","hashOfConfig":"42"},{"size":1001,"mtime":1606987054141,"results":"70","hashOfConfig":"42"},{"size":2118,"mtime":1606987054142,"results":"71","hashOfConfig":"42"},{"size":5573,"mtime":1607908038467,"results":"72","hashOfConfig":"42"},{"size":1891,"mtime":1606982957468,"results":"73","hashOfConfig":"42"},{"size":497,"mtime":1606191047625,"results":"74","hashOfConfig":"42"},{"size":4342,"mtime":1607267199217,"results":"75","hashOfConfig":"42"},{"size":2304,"mtime":1607907880629,"results":"76","hashOfConfig":"42"},{"size":168,"mtime":1606191047646,"results":"77","hashOfConfig":"42"},{"size":1315,"mtime":1607519824446,"results":"78","hashOfConfig":"42"},{"size":1609,"mtime":1607519824456,"results":"79","hashOfConfig":"42"},{"size":4037,"mtime":1607714208559,"results":"80","hashOfConfig":"42"},{"size":718,"mtime":1607519824447,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5y1f88",{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"91"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"105"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"91"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"105"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\ChuyenDeWeb2\\foofaq\\src\\components\\QuestionGridViewManager\\index.js",[],"F:\\ChuyenDeWeb2\\foofaq\\src\\components\\EventsGridViewManager\\index.js",["172","173"],"F:\\ChuyenDeWeb2\\foofaq\\src\\helpers\\index.js",[],"F:\\ChuyenDeWeb2\\foofaq\\src\\components\\QuestionCard\\index.js",["174"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport moment from \"moment\";\r\n\r\n// MUI components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n// components\r\nimport Link from \"../../common/CustomLink\";\r\n\r\n// icons\r\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport QuestionAnswerIcon from \"@material-ui/icons/QuestionAnswer\";\r\n\r\n// custom style\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: \"0.5rem\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: \"auto\",\r\n    maxWidth: 800,\r\n  },\r\n  vote: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  title: {\r\n    fontSize: \"1.8rem\",\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: \"0.5rem 0.5rem 0 0\",\r\n    },\r\n  },\r\n  views: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: \"0.5rem 0.5rem 0 0\",\r\n    },\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  buttonView: {\r\n    height: \"50px\",\r\n  },\r\n  footerCard: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst QuestionCard = ({ question, increasePoint, decreasePoint }) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    id,\r\n    title,\r\n    content,\r\n    point,\r\n    views,\r\n    createdAt,\r\n    categories,\r\n    answers,\r\n    asker,\r\n    voteUp,\r\n    voteDown,\r\n  } = question;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Grid container spacing={2}>\r\n          <Grid item className={classes.vote}>\r\n            <IconButton\r\n              aria-label=\"upvote\"\r\n              disabled={voteUp}\r\n              onClick={() => increasePoint(id)}\r\n            >\r\n              <ArrowDropUpIcon />\r\n            </IconButton>\r\n            <Typography gutterBottom variant=\"h4\">\r\n              {point}\r\n            </Typography>\r\n            <IconButton\r\n              aria-label=\"downvote\"\r\n              disabled={voteDown}\r\n              onClick={() => decreasePoint(id)}\r\n            >\r\n              <ArrowDropDownIcon />\r\n            </IconButton>\r\n          </Grid>\r\n          {/* content */}\r\n          <Grid item xs={12} sm container>\r\n            <Grid item xs container direction=\"column\" spacing={2}>\r\n              <Grid item xs>\r\n                <Link className={classes.title} to={`questions/${id}`}>\r\n                  {title}\r\n                </Link>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  {content.length <= 150\r\n                    ? content\r\n                    : content.slice(0, 150) + \"...\"}\r\n                </Typography>\r\n                {/* categories */}\r\n                <div className={classes.chips}>\r\n                  {categories.map((category) => (\r\n                    <Chip key={category.id} label={category.name} clickable />\r\n                  ))}\r\n                </div>\r\n                {/* views and answer */}\r\n                <Grid container spacing={2} className={classes.footerCard}>\r\n                  {/* views */}\r\n                  <Grid item xs={12} sm className={classes.views}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      startIcon={<VisibilityIcon />}\r\n                      className={classes.buttonView}\r\n                    >\r\n                      {views} Views\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"secondary\"\r\n                      startIcon={<QuestionAnswerIcon />}\r\n                      className={classes.buttonView}\r\n                    >\r\n                      {answers.length} Answer\r\n                    </Button>\r\n                  </Grid>\r\n                  {/* user */}\r\n                  <Grid item className={classes.views}>\r\n                    <ListItem alignItems=\"flex-start\">\r\n                      <ListItemAvatar>\r\n                        <Avatar\r\n                          alt=\"MaiaVictor\"\r\n                          src=\"/static/images/avatar/1.jpg\"\r\n                        />\r\n                      </ListItemAvatar>\r\n                      <ListItemText\r\n                        primary=\"MaiaVictor\"\r\n                        secondary={`asked ${moment(createdAt).fromNow()}`}\r\n                      />\r\n                    </ListItem>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionCard;\r\n",["175","176"],"F:\\ChuyenDeWeb2\\foofaq\\src\\components\\QuestionManager\\index.js",["177"],"F:\\ChuyenDeWeb2\\foofaq\\src\\components\\QuestionApprovalCard\\index.js",["178","179","180"],"F:\\ChuyenDeWeb2\\foofaq\\src\\index.js",["181","182","183","184"],"F:\\ChuyenDeWeb2\\foofaq\\src\\components\\NavigationBar\\index.js",[],["185","186"],"F:\\ChuyenDeWeb2\\foofaq\\src\\pages\\EventList\\index.js",[],"F:\\ChuyenDeWeb2\\foofaq\\src\\pages\\FormManager\\index.js",[],["187","188"],"F:\\ChuyenDeWeb2\\foofaq\\src\\components\\JobsGridViewManager\\index.js",[],"F:\\ChuyenDeWeb2\\foofaq\\src\\components\\JobsGridView\\index.js",["189","190"],"import React, { useEffect, useState } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { pagJobs, getJobsSearch } from \"../../helpers\";\r\nimport SearchBar from \"../../components/SearchBar\";\r\nimport Link from \"../../common/CustomLink\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function JobsGridView({ extraColumns, extraRows }) {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [key, setKey] = useState(\"\");\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  // useEffect(() => {\r\n  //   (async () => {\r\n  //     const jobData = await pagJobs();\r\n  //     setJobs(jobData);\r\n  //   })();\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const jobData = await getJobsSearch(keyword);\r\n      setJobs(jobData);\r\n    })();\r\n  }, [keyword]);\r\n\r\n  const handleChangeSearch = (e) => {\r\n    setKeyword(e.target.value);\r\n  };\r\n  const handleSearch = () => {\r\n    setKey(keyword);\r\n  };\r\n\r\n  let columns = [\r\n    {\r\n      field: \"id\",\r\n      headerName: \"#\",\r\n      headerAlign: \"center\",\r\n      width: 100,\r\n      renderCell: (params) => <strong>{params.value}</strong>,\r\n    },\r\n    {\r\n      field: \"name\",\r\n      headerName: \"Name\",\r\n      headerAlign: \"center\",\r\n      width: 200,\r\n      renderCell: (params) => <strong>{params.value}</strong>,\r\n    },\r\n    {\r\n      field: \"description\",\r\n      headerName: \"Description\",\r\n      headerAlign: \"center\",\r\n      width: 300,\r\n      renderCell: (params) => <strong>{params.value}</strong>,\r\n    },\r\n    {\r\n      field: \"type\",\r\n      headerName: \"Type\",\r\n      headerAlign: \"center\",\r\n      width: 150,\r\n      renderCell: (params) => <strong>{params.value}</strong>,\r\n    },\r\n    {\r\n      field: \"company\",\r\n      headerName: \"Company\",\r\n      headerAlign: \"center\",\r\n      width: 200,\r\n      renderCell: (params) => <strong>{params.value}</strong>,\r\n    },\r\n    {\r\n      field: \"area\",\r\n      headerName: \"Area\",\r\n      headerAlign: \"center\",\r\n      width: 200,\r\n      renderCell: (params) => <strong>{params.value}</strong>,\r\n    },\r\n    {\r\n      field: \"experience\",\r\n      headerName: \"Experience\",\r\n      headerAlign: \"center\",\r\n      width: 150,\r\n      renderCell: (params) => <strong>{params.value}</strong>,\r\n    },\r\n    {\r\n      field: \"role\",\r\n      headerName: \"Role\",\r\n      headerAlign: \"center\",\r\n      width: 150,\r\n      renderCell: (params) => <strong>{params.value}</strong>,\r\n    },\r\n  ];\r\n\r\n  let rows = [...jobs];\r\n\r\n  columns = extraColumns ? [...columns, ...extraColumns] : columns;\r\n  rows = extraRows ? [...rows, ...extraRows] : rows;\r\n\r\n  return (\r\n    <div style={{ height: \"400px\", width: \"100%\" }}>\r\n      <h1>Jobs</h1>\r\n      <SearchBar\r\n        handleChangeSearch={handleChangeSearch}\r\n        handleSearch={handleSearch}\r\n      />\r\n      <br/>\r\n      <Link to={\"/forms/event\"}>\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          {\" \"}\r\n          ADD{\" \"}\r\n        </Button>\r\n      </Link>\r\n      <br/>\r\n      <br/>\r\n      <DataGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pageSize={5}\r\n        rowsPerPageOptions={[5, 10, 20]}\r\n        pagination\r\n        {...jobs}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\FormManager\\Jobs.js",["191","192","193","194"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./Jos.scss\";\r\nimport { getJob, addJobs, updateJobs } from \"../../helpers\";\r\n\r\nfunction Jobs(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  // name, description, type, area, company, experience, role\r\n  const [job, setJob] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [area, setArea] = useState(\"\");\r\n  const [company, setCompany] = useState(\"\");\r\n  const [experience, setExperience] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  let { id } = useParams();\r\n\r\n  let handleSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  useEffect(() => {\r\n    (async () => {\r\n      const questionData = await getJob(id);\r\n      setJob(questionData);\r\n    })();\r\n  }, []);\r\n  if (id === undefined) {\r\n    handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      addJobs(name, description, type, area, company, experience, role)\r\n        .then(function (response) {\r\n          setOpen(true);\r\n          //window.location.reload();\r\n        })\r\n        .catch(function (error) {\r\n          // handle error\r\n          console.log(error);\r\n        });\r\n    };\r\n  } else {\r\n    handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      updateJobs(id, name, description, type, area, company, experience, role)\r\n        .then(function (response) {\r\n          setOpen(true);\r\n          window.location.reload();\r\n        })\r\n        .catch(function (error) {\r\n          // handle error\r\n          console.log(error);\r\n        });\r\n    };\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Jobs Form</h1>\r\n      <ul className=\"form-style-1\">\r\n        <li>\r\n          <label>\r\n            Jobs Name <span className=\"required\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"field1\"\r\n            className=\"field-divided\"\r\n            placeholder=\"name\"\r\n            defaultValue={job.name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n          />{\" \"}\r\n        </li>\r\n        <li>\r\n          <label>\r\n            Type <span className=\"required\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"field3\"\r\n            className=\"field-long\"\r\n            defaultValue={job.type}\r\n            onChange={(e) => {\r\n              setType(e.target.value);\r\n            }}\r\n          />\r\n        </li>\r\n        <li>\r\n          <label>\r\n            Area <span className=\"required\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"field3\"\r\n            className=\"field-long\"\r\n            defaultValue={job.area}\r\n            onChange={(e) => {\r\n              setArea(e.target.value);\r\n            }}\r\n          />\r\n        </li>\r\n        <li>\r\n          <label>\r\n            Company <span className=\"required\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"field3\"\r\n            className=\"field-long\"\r\n            defaultValue={job.company}\r\n            onChange={(e) => {\r\n              setCompany(e.target.value);\r\n            }}\r\n          />\r\n        </li>\r\n        <li>\r\n          <label>\r\n            experience <span className=\"required\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"field3\"\r\n            className=\"field-long\"\r\n            defaultValue={job.experience}\r\n            onChange={(e) => {\r\n              setExperience(e.target.value);\r\n            }}\r\n          />\r\n        </li>\r\n\r\n        <li>\r\n          <label>\r\n            Role <span className=\"required\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"field3\"\r\n            className=\"field-long\"\r\n            defaultValue={job.role}\r\n            onChange={(e) => {\r\n              setRole(e.target.value);\r\n            }}\r\n          />\r\n        </li>\r\n\r\n        <li>\r\n          <label>\r\n            Description <span className=\"required\">*</span>\r\n          </label>\r\n          <textarea\r\n            name=\"field5\"\r\n            id=\"field5\"\r\n            className=\"field-long field-textarea\"\r\n            defaultValue={job.description}\r\n            onChange={(e) => {\r\n              setDescription(e.target.value);\r\n            }}\r\n          />\r\n        </li>\r\n        <li>\r\n          <Button onClick={handleSubmit} variant=\"outlined\" color=\"primary\">\r\n            {\" \"}\r\n            Send\r\n          </Button>\r\n        </li>\r\n      </ul>\r\n\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          This is a success message!\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jobs;\r\n","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\FormManager\\Categories.js",["195"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { getCategory, AddCategory, UpdateCategory } from \"../../helpers\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  button: {\r\n    margin: \"10px auto\",\r\n  },\r\n}));\r\n\r\nconst CategoriesForm = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const classes = useStyles();\r\n  const [category, setCategory] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [des, setDes] = useState(\"\");\r\n  let { id } = useParams();\r\n  let handleSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  useEffect(() => {\r\n    (async () => {\r\n      const questionData = await getCategory(id);\r\n      setCategory(questionData);\r\n    })();\r\n  }, []);\r\n  if (id === undefined) {\r\n    handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      AddCategory(name, des)\r\n        .then(function (response) {\r\n          setOpen(true);\r\n          window.location.reload();\r\n        })\r\n        .catch(function (error) {\r\n          // handle error\r\n          console.log(error);\r\n        });\r\n    };\r\n  } else {\r\n    handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      UpdateCategory(id, name, des)\r\n        .then(function (response) {\r\n          setOpen(true);\r\n          window.location.reload();\r\n        })\r\n        .catch(function (error) {\r\n          // handle error\r\n          console.log(error);\r\n        });\r\n    };\r\n  }\r\n  console.log(category.name);\r\n  return (\r\n    <div>\r\n      <h1> Categories Form</h1>\r\n\r\n      <div className={classes.root}>\r\n        <form>\r\n          <TextField\r\n            id=\"outlined-full-width\"\r\n            label=\"Name\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Name...\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            defaultValue={category.name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            id=\"outlined-full-width\"\r\n            label=\"Description\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Description...\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onChange={(e) => {\r\n              setDes(e.target.value);\r\n            }}\r\n            defaultValue={category.description}\r\n            variant=\"outlined\"\r\n          />\r\n          <Button\r\n            onClick={handleSubmit}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n          >\r\n            Send\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          This is a success message!\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoriesForm;\r\n","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\EventCard\\index.js",[],"F:\\ChuyenDeWeb2\\foofaq\\src\\components\\AnswerForm\\index.js",[],"F:\\ChuyenDeWeb2\\foofaq\\src\\components\\QuestionInfoDetail\\index.js",[],"F:\\ChuyenDeWeb2\\foofaq\\src\\components\\QuestionForm\\index.js",[],"F:\\ChuyenDeWeb2\\foofaq\\src\\components\\CategoriesInput\\index.js",[],"F:\\ChuyenDeWeb2\\foofaq\\src\\components\\Dialog\\index.js",["196"],"F:\\ChuyenDeWeb2\\foofaq\\src\\pages\\QuestionManager\\index.js",["197"],"import React from \"react\";\r\nimport QuestionGridViewManager from \"../../components/QuestionGridViewManager\";\r\nimport { Route, Link } from \"react-router-dom\";\r\n// import JobsManager from \"../../components/JobsManager\";\r\n// import EventsManager from \"../../components/EventsManager\";\r\n// import CategoriesManager from \"../../components/CategoriesManager\";\r\nimport HeaderAsideNavbar from \"../../components/HeaderAsideNavbar\";\r\nimport JobsGridViewManager from \"../../components/JobsGridViewManager\";\r\nimport EventsGridViewManager from \"../../components/EventsGridViewManager\";\r\n\r\nimport CategoriesGridViewManager from \"../../components/CategoriesGridViewManager\";\r\n// import SearchBar from \"../../components/SearchBar\";\r\n// import Button from \"@material-ui/core/Button\";\r\n// import CategoriesManager from \"../../components/CategoriesManager\";\r\n// import QuestionManager from \"../../components/QuestionManager\";\r\n\r\n// import SearchBar from \"../../components/SearchBar\";\r\n// import Button from \"@material-ui/core/Button\";\r\nfunction Manager(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <HeaderAsideNavbar></HeaderAsideNavbar>\r\n        </div>\r\n        <div className=\"col-md-10\">\r\n          <Route\r\n            path=\"/manager/categories\"\r\n            component={CategoriesGridViewManager}\r\n          />\r\n          <Route\r\n            path=\"/manager/questions\"\r\n            component={QuestionGridViewManager}\r\n          />\r\n          <Route path=\"/manager/jobs\" component={JobsGridViewManager} />\r\n          <Route path=\"/manager/events\" component={EventsGridViewManager} />\r\n          {/* <QuestionManager />\r\n      <JobsManager />\r\n      <EventsManager /> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Manager;\r\n","F:\\ChuyenDeWeb2\\foofaq\\src\\pages\\Login\\index.js",[],"F:\\ChuyenDeWeb2\\foofaq\\src\\pages\\QuestionApproval\\index.js",[],"F:\\ChuyenDeWeb2\\foofaq\\src\\pages\\QuestionCreateForm\\index.js",[],"F:\\ChuyenDeWeb2\\foofaq\\src\\provider\\login-sample.js",["198"],"// import\r\nimport FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport GitHubLogin from 'react-github-login';\r\n\r\n// icon\r\nimport GoogleIcon from \"../images/google_icon.svg\";\r\nimport FacebookIcon from \"../images/facebook_icon.svg\";\r\nimport GithubIcon from \"../images/githubicon.svg\";\r\n\r\n// export\r\nexport const GoogleLoginProvider = (props) => {\r\n  return (\r\n    <GoogleLogin\r\n      clientId=\"\" //TODO: write your key here\r\n      buttonText=\"Login\"\r\n      onSuccess={props.handlerLogin}\r\n      onFailure={props.handlerLogin}\r\n      cookiePolicy={\"single_host_origin\"}\r\n      render={(renderProps) => (\r\n        <button\r\n          onClick={renderProps.onClick}\r\n          disabled={renderProps.disabled}\r\n          className=\"gg-login-btn\"\r\n        >\r\n          <span className=\"icon-wrapper\">\r\n            <span\r\n              className=\"icon\"\r\n              style={{\r\n                backgroundImage: `url(${GoogleIcon})`,\r\n              }}\r\n            ></span>\r\n          </span>\r\n          <span className=\"text\">Google</span>\r\n        </button>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport const FacebookLoginProvider = (props) => {\r\n  return (\r\n    <FacebookLogin\r\n      appId=\"\" //TODO: write your key here\r\n      textButton=\"FACEBOOK\"\r\n      fields=\"name,email,picture\"\r\n      callback={props.handlerLogin}\r\n      render={(renderProps) => (\r\n        <button\r\n          className=\"fb-login-btn\"\r\n          onClick={renderProps.onClick}\r\n          disabled={renderProps.disabled}\r\n        >\r\n          <span className=\"icon-wrapper\">\r\n            <span\r\n              className=\"icon\"\r\n              style={{\r\n                backgroundImage: `url(${FacebookIcon})`,\r\n              }}\r\n            ></span>\r\n          </span>\r\n          <span className=\"text\">Facebook</span>\r\n        </button>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport const GithubLoginProvider = (props) => {\r\n  return(\r\n    <GitHubLogin \r\n      clientId=\"\" //TODO: write your key here\r\n      redirectUri=\"\" \r\n      scope=\"repo\"\r\n      onSuccess={props.handlerLogin}\r\n      onFailure={props.handlerLogin}\r\n      className=\"git-login-btn\"\r\n    >\r\n      <span className=\"icon-wrapper\">\r\n        <span\r\n          className=\"icon\"\r\n          style={{\r\n            backgroundImage: `url(${GithubIcon})`,\r\n          }}\r\n        ></span>\r\n      </span>\r\n      <span className=\"text\">Github</span>\r\n    </GitHubLogin>\r\n    );\r\n};\r\n\r\nconst LoginProvider = ({ type, handlerLogin }) => {\r\n  switch (type) {\r\n    case \"gg\":\r\n    case \"google\":\r\n      return <GoogleLoginProvider handlerLogin={handlerLogin} />;\r\n    case \"fb\":\r\n    case \"facebook\":\r\n      return <FacebookLoginProvider handlerLogin={handlerLogin} />;\r\n    case \"git\":\r\n    case \"github\":\r\n      return <GithubLoginProvider handlerLogin={handlerLogin} />;\r\n  }\r\n};\r\n\r\nexport default LoginProvider;\r\n","F:\\ChuyenDeWeb2\\foofaq\\src\\components\\QuestionAnswerDetail\\index.js",[],"F:\\ChuyenDeWeb2\\foofaq\\src\\common\\PageLayout\\index.js",[],"F:\\ChuyenDeWeb2\\foofaq\\src\\components\\SearchBar\\index.js",[],"F:\\ChuyenDeWeb2\\foofaq\\src\\components\\CategoryCard\\index.js",[],"F:\\ChuyenDeWeb2\\foofaq\\src\\components\\NavigationBar\\NavTag\\index.js",[],"F:\\ChuyenDeWeb2\\foofaq\\src\\pages\\QuestionList\\index.js",[],"F:\\ChuyenDeWeb2\\foofaq\\src\\pages\\QuestionDetail\\index.js",[],"F:\\ChuyenDeWeb2\\foofaq\\src\\common\\CustomLink.js",[],"F:\\ChuyenDeWeb2\\foofaq\\src\\components\\HeaderAsideNavbar\\index.js",[],"F:\\ChuyenDeWeb2\\foofaq\\src\\pages\\QuestionCategoryList\\index.js",["199"],"import React, { useEffect, useState } from \"react\";\r\nimport CategoryCard from \"../../components/CategoryCard\";\r\nimport axios from \"axios\";\r\n\r\n//components\r\nimport PageLayout from \"../../common/PageLayout\";\r\nimport { Grid, makeStyles, Paper, Container } from \"@material-ui/core\";\r\nimport NavTag from \"../../components/NavigationBar/NavTag\";\r\nimport SearchBar from \"../../components/SearchBar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction CategoryList() {\r\n  const classes = useStyles();\r\n  const [categories, setCategories] = useState(null);\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const [key, setKey] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res = await axios.get(\r\n        `https://5fc48ee536bc790016343a0b.mockapi.io/categories?search=${key}&page=1&limit=4`\r\n      );\r\n      console.log(res.data);\r\n      setCategories(res.data);\r\n    })();\r\n  }, [key]);\r\n\r\n  const handleChangeSearch = (e) => {\r\n    setKeyword(e.target.value);\r\n  };\r\n  const handleSearch = () => {\r\n    setKey(keyword);\r\n  };\r\n\r\n  return (\r\n    <PageLayout outsideContainer={<NavTag />}>\r\n      <SearchBar\r\n        handleChangeSearch={handleChangeSearch}\r\n        handleSearch={handleSearch}\r\n      />\r\n      <Grid container className={classes.root} spacing={2}>\r\n        {categories ? (\r\n          categories.map((category) => (\r\n            <Grid item xs={3} key={category.id}>\r\n              <CategoryCard category={category} className={classes.root} />\r\n            </Grid>\r\n          ))\r\n        ) : (\r\n          <Grid container spacing={3} className={classes.root}>\r\n            <Grid item xs={3}>\r\n              <Paper className={classes.paper}></Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Paper className={classes.paper}></Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Paper className={classes.paper}></Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Paper className={classes.paper}></Paper>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </PageLayout>\r\n  );\r\n}\r\n\r\nexport default CategoryList;\r\n","F:\\ChuyenDeWeb2\\foofaq\\src\\reducers\\index.js",[],"F:\\ChuyenDeWeb2\\foofaq\\src\\components\\CategoriesGridView\\index.js",[],"F:\\ChuyenDeWeb2\\foofaq\\src\\components\\EventSearchBar\\index.js",[],"F:\\ChuyenDeWeb2\\foofaq\\src\\components\\AdvancedFilter\\index.js",["200"],"F:\\ChuyenDeWeb2\\foofaq\\src\\components\\CategoriesGridViewManager\\index.js",[],{"ruleId":"201","severity":1,"message":"202","line":4,"column":8,"nodeType":"203","messageId":"204","endLine":4,"endColumn":13},{"ruleId":"201","severity":1,"message":"205","line":16,"column":10,"nodeType":"203","messageId":"204","endLine":16,"endColumn":13},{"ruleId":"201","severity":1,"message":"206","line":84,"column":5,"nodeType":"203","messageId":"204","endLine":84,"endColumn":10},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"201","severity":1,"message":"211","line":16,"column":8,"nodeType":"203","messageId":"204","endLine":16,"endColumn":25},{"ruleId":"201","severity":1,"message":"212","line":20,"column":41,"nodeType":"203","messageId":"204","endLine":20,"endColumn":56},{"ruleId":"201","severity":1,"message":"213","line":83,"column":7,"nodeType":"203","messageId":"204","endLine":83,"endColumn":14},{"ruleId":"214","severity":1,"message":"215","line":153,"column":23,"nodeType":"216","messageId":"217","endLine":153,"endColumn":25},{"ruleId":"201","severity":1,"message":"218","line":18,"column":8,"nodeType":"203","messageId":"204","endLine":18,"endColumn":33},{"ruleId":"201","severity":1,"message":"219","line":21,"column":8,"nodeType":"203","messageId":"204","endLine":21,"endColumn":29},{"ruleId":"201","severity":1,"message":"220","line":23,"column":8,"nodeType":"203","messageId":"204","endLine":23,"endColumn":27},{"ruleId":"201","severity":1,"message":"221","line":24,"column":8,"nodeType":"203","messageId":"204","endLine":24,"endColumn":20},{"ruleId":"207","replacedBy":"222"},{"ruleId":"209","replacedBy":"223"},{"ruleId":"207","replacedBy":"224"},{"ruleId":"209","replacedBy":"225"},{"ruleId":"201","severity":1,"message":"226","line":3,"column":10,"nodeType":"203","messageId":"204","endLine":3,"endColumn":17},{"ruleId":"201","severity":1,"message":"205","line":10,"column":10,"nodeType":"203","messageId":"204","endLine":10,"endColumn":13},{"ruleId":"201","severity":1,"message":"227","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":20},{"ruleId":"201","severity":1,"message":"228","line":3,"column":8,"nodeType":"203","messageId":"204","endLine":3,"endColumn":17},{"ruleId":"201","severity":1,"message":"229","line":4,"column":8,"nodeType":"203","messageId":"204","endLine":4,"endColumn":12},{"ruleId":"230","severity":1,"message":"231","line":40,"column":6,"nodeType":"232","endLine":40,"endColumn":8,"suggestions":"233"},{"ruleId":"230","severity":1,"message":"231","line":47,"column":6,"nodeType":"232","endLine":47,"endColumn":8,"suggestions":"234"},{"ruleId":"201","severity":1,"message":"235","line":12,"column":7,"nodeType":"203","messageId":"204","endLine":12,"endColumn":9},{"ruleId":"201","severity":1,"message":"236","line":3,"column":17,"nodeType":"203","messageId":"204","endLine":3,"endColumn":21},{"ruleId":"237","severity":1,"message":"238","line":93,"column":3,"nodeType":"239","messageId":"240","endLine":103,"endColumn":4},{"ruleId":"201","severity":1,"message":"241","line":7,"column":35,"nodeType":"203","messageId":"204","endLine":7,"endColumn":44},{"ruleId":"201","severity":1,"message":"242","line":34,"column":22,"nodeType":"203","messageId":"204","endLine":34,"endColumn":35},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'key' is assigned a value but never used.","'asker' is assigned a value but never used.","no-native-reassign",["243"],"no-negated-in-lhs",["244"],"'HeaderAsideNavbar' is defined but never used.","'declineQuestion' is defined but never used.","'perPage' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'CategoriesGridViewManager' is defined but never used.","'EventsGridViewManager' is defined but never used.","'JobsGridViewManager' is defined but never used.","'JobsGridView' is defined but never used.",["243"],["244"],["243"],["244"],"'pagJobs' is defined but never used.","'makeStyles' is defined but never used.","'TextField' is defined but never used.","'Icon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["245"],["246"],"'id' is defined but never used.","'Link' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Container' is defined but never used.","'setCategories' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"247","fix":"248"},{"desc":"247","fix":"249"},"Update the dependencies array to be: [id]",{"range":"250","text":"251"},{"range":"252","text":"251"},[1343,1345],"[id]",[1318,1320]]