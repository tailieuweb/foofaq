[{"D:\\core_foo\\foofaq\\src\\index.js":"1","D:\\core_foo\\foofaq\\src\\pages\\FormManager\\index.js":"2","D:\\core_foo\\foofaq\\src\\components\\FormManager\\Jobs.js":"3","D:\\core_foo\\foofaq\\src\\components\\HeaderAsideNavbar\\index.js":"4","D:\\core_foo\\foofaq\\src\\helpers\\index.js":"5","D:\\core_foo\\foofaq\\src\\pages\\QuestionManager\\index.js":"6","D:\\core_foo\\foofaq\\src\\components\\QuestionTable\\index.js":"7","D:\\core_foo\\foofaq\\src\\components\\FormManager\\User.js":"8","D:\\core_foo\\foofaq\\src\\reducers\\index.js":"9","D:\\core_foo\\foofaq\\src\\helpers\\userAPI.js":"10","D:\\core_foo\\foofaq\\src\\components\\UserManager\\index.js":"11","D:\\core_foo\\foofaq\\src\\components\\UserDetailStoryFirst\\index.js":"12","D:\\core_foo\\foofaq\\src\\components\\NavigationBar\\index.js":"13","D:\\core_foo\\foofaq\\src\\components\\SearchBar\\index.js":"14","D:\\core_foo\\foofaq\\src\\common\\PageLayout\\index.js":"15","D:\\core_foo\\foofaq\\src\\common\\CustomLink.js":"16","D:\\core_foo\\foofaq\\src\\components\\UserList\\index.js":"17"},{"size":1401,"mtime":1608043639544,"results":"18","hashOfConfig":"19"},{"size":1459,"mtime":1608043819830,"results":"20","hashOfConfig":"19"},{"size":5332,"mtime":1607991576570,"results":"21","hashOfConfig":"19"},{"size":5037,"mtime":1607995244508,"results":"22","hashOfConfig":"19"},{"size":5718,"mtime":1607994228712,"results":"23","hashOfConfig":"19"},{"size":1231,"mtime":1607993467503,"results":"24","hashOfConfig":"19"},{"size":1183,"mtime":1607993597407,"results":"25","hashOfConfig":"19"},{"size":3955,"mtime":1608043395641,"results":"26","hashOfConfig":"19"},{"size":168,"mtime":1607991576580,"results":"27","hashOfConfig":"19"},{"size":1298,"mtime":1608003914713,"results":"28","hashOfConfig":"19"},{"size":4815,"mtime":1608043989260,"results":"29","hashOfConfig":"19"},{"size":11093,"mtime":1607997734333,"results":"30","hashOfConfig":"19"},{"size":7824,"mtime":1607997896373,"results":"31","hashOfConfig":"19"},{"size":530,"mtime":1607991576573,"results":"32","hashOfConfig":"19"},{"size":409,"mtime":1607991576567,"results":"33","hashOfConfig":"19"},{"size":497,"mtime":1607991576566,"results":"34","hashOfConfig":"19"},{"size":1231,"mtime":1608022217864,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1azhiz9",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"45"},"D:\\core_foo\\foofaq\\src\\index.js",[],"D:\\core_foo\\foofaq\\src\\pages\\FormManager\\index.js",[],"D:\\core_foo\\foofaq\\src\\components\\FormManager\\Jobs.js",["78","79","80","81"],"D:\\core_foo\\foofaq\\src\\components\\HeaderAsideNavbar\\index.js",["82","83","84","85","86","87"],"import React, { useState } from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\n\r\n//icon\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport EventIcon from \"@material-ui/icons/Event\";\r\nimport QuestionAnswerIcon from \"@material-ui/icons/QuestionAnswer\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Link from \"../../common/CustomLink\";\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport \"./index.scss\";\r\nfunction Index(props) {\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n  const handleListItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n  };\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"navigation\"\r\n        style={{\r\n          width: \"15%\",\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n        }}\r\n      >\r\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n          {/* <ListItem\r\n            button\r\n            selected={selectedIndex === 0}\r\n            onClick={(event) => handleListItemClick(event, 0)}\r\n          >\r\n            <ListItemIcon>\r\n              <DashboardIcon />\r\n            </ListItemIcon>\r\n\r\n            <ListItemText primary=\"Dashboard\" />\r\n          </ListItem> */}\r\n\r\n          {/* <Link\r\n            style={{\r\n              width: \"100%\",\r\n              textDecoration: \"none\",\r\n              color: \"#000000b8\",\r\n            }}\r\n            to=\"/manager/jobs\"\r\n          >\r\n            <ListItem\r\n              button\r\n              selected={selectedIndex === 1}\r\n              onClick={(event) => handleListItemClick(event, 1)}\r\n            >\r\n              <ListItemIcon>\r\n                <WorkIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Jobs\" />\r\n            </ListItem>\r\n          </Link> */}\r\n          {/* <Link\r\n            style={{\r\n              width: \"100%\",\r\n              textDecoration: \"none\",\r\n              color: \"#000000b8\",\r\n            }}\r\n            to=\"/manager/events\"\r\n          >\r\n            <ListItem\r\n              button\r\n              selected={selectedIndex === 2}\r\n              onClick={(event) => handleListItemClick(event, 2)}\r\n            >\r\n              <ListItemIcon>\r\n                <EventIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Events\" />\r\n            </ListItem>\r\n          </Link> */}\r\n\r\n          {/* <Link\r\n            style={{\r\n              width: \"100%\",\r\n              textDecoration: \"none\",\r\n              color: \"#000000b8\",\r\n            }}\r\n            to=\"/manager/questions\"\r\n          >\r\n            <ListItem\r\n              button\r\n              selected={selectedIndex === 3}\r\n              onClick={(event) => handleListItemClick(event, 3)}\r\n            >\r\n              <ListItemIcon>\r\n                <QuestionAnswerIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Questions\" />\r\n            </ListItem>\r\n          </Link> */}\r\n\r\n\r\n          {/* <Link\r\n            style={{\r\n              width: \"100%\",\r\n              textDecoration: \"none\",\r\n              color: \"#000000b8\",\r\n            }}\r\n            to=\"/manager/categories\"\r\n          >\r\n            <ListItem\r\n              button\r\n              selected={selectedIndex === 4}\r\n              onClick={(event) => handleListItemClick(event, 4)}\r\n            >\r\n              <ListItemIcon>\r\n                <MenuIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Categories\" />\r\n            </ListItem>\r\n          </Link> */}\r\n\r\n          {/* <Link\r\n            style={{\r\n              width: \"100%\",\r\n              textDecoration: \"none\",\r\n              color: \"#000000b8\",\r\n            }}\r\n            to=\"/approval\"\r\n          >\r\n            <ListItem\r\n              button\r\n              selected={selectedIndex === 5}\r\n              onClick={(event) => handleListItemClick(event, 5)}\r\n            >\r\n              <ListItemIcon>\r\n                <DraftsIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Approval\" />\r\n            </ListItem>\r\n          </Link> */}\r\n\r\n\r\n           {/* User */}\r\n           <Link\r\n            style={{\r\n              width: \"100%\",\r\n              textDecoration: \"none\",\r\n              color: \"#000000b8\",\r\n            }}\r\n            to=\"/manager/user\"\r\n          >\r\n            <ListItem\r\n              button\r\n              selected={selectedIndex === 0}\r\n              onClick={(event) => handleListItemClick(event, 0)}\r\n            >\r\n              <ListItemIcon>\r\n                <PeopleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"User\" />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n",["88","89"],"D:\\core_foo\\foofaq\\src\\helpers\\index.js",[],"D:\\core_foo\\foofaq\\src\\pages\\QuestionManager\\index.js",[],"D:\\core_foo\\foofaq\\src\\components\\QuestionTable\\index.js",["90","91","92"],"import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\n\nexport const TableH = (props) => {\n  // const classes = useStyles();\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell align=\"left\">{props.tt_id}</TableCell>\n        <TableCell>{props.tt_title}</TableCell>\n        <TableCell align=\"left\">{props.tt_update}</TableCell>\n        <TableCell align=\"left\">{props.tt_delete}</TableCell>\n      </TableRow>\n    </TableHead>\n  );\n};\n\nexport const TableB = (props) => {\n  return (\n    <TableBody>\n      <TableRow key={props.key_id}>\n        <TableCell align=\"left\">{props.id}</TableCell>\n\n        <TableCell component=\"th\" scope=\"row\">\n          {props.title}\n        </TableCell>\n\n        <TableCell align=\"left\">{props.update}</TableCell>\n        <TableCell align=\"left\">{props.delete}</TableCell>\n      </TableRow>\n    </TableBody>\n  );\n};\n",["93","94"],"D:\\core_foo\\foofaq\\src\\components\\FormManager\\User.js",["95"],"D:\\core_foo\\foofaq\\src\\reducers\\index.js",[],["96","97"],"D:\\core_foo\\foofaq\\src\\helpers\\userAPI.js",[],"D:\\core_foo\\foofaq\\src\\components\\UserManager\\index.js",["98"],"D:\\core_foo\\foofaq\\src\\components\\UserDetailStoryFirst\\index.js",["99","100","101","102"],"//hook call api:\nimport React, { useState, useEffect } from \"react\";\nimport { API_ONE_USERSTORY } from \"../../helpers/index\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\n// import Imgavatar from \"../../images/stack.png\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport \"./index.scss\";\nimport PageLayout from \"../../common/PageLayout/index\";\n\nconst index = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n\n  input: {\n    display: \"none\",\n  },\n  root: {\n    width: \"30%\",\n    maxWidth: 360,\n\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function ImageAvatars() {\n  const classes = index();\n  const [user, setUser] = useState({});\n\n  const displaynameEl1 = React.useRef(null);\n  const titleE1 = React.useRef(null);\n  const fullnameEl1 = React.useRef(null);\n  const ImgavatarEl1 = React.useRef(null);\n  const liveE1 = React.useRef(null);\n  const twiterE1 = React.useRef(null);\n  const WebsiteE1 = React.useRef(null);\n  const GitHubE1 = React.useRef(null);\n  //Method: Get\n  useEffect(() => {\n    fetch(`${API_ONE_USERSTORY}`, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        //  console.log(response);\n        setUser(response);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n  const HandleSubmit = (e) => {\n    e.preventDefault();\n    fetch(`${API_ONE_USERSTORY}`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n\n      body: JSON.stringify({\n        displayname: displaynameEl1.current.value,\n        fullname: fullnameEl1.current.value,\n        // avatar: ImgavatarEl1.current.value,\n        title: titleE1.current.value,\n        live: liveE1.current.value,\n        twiter: twiterE1.current.value,\n        Website: WebsiteE1.current.value,\n        GitHub: GitHubE1.current.value,\n      }),\n    }).then((response) => {\n      console.log(response);\n    });\n  };\n  return (\n    <PageLayout>\n    <div className=\"alert alert-info container\">\n     \n        <React.Fragment>\n          <CssBaseline />\n          <Container>\n            <Typography component=\"div\">\n              {/* <div className={classes.root}>\n              <Avatar\n                alt=\"Remy Sharp\"\n                src={user.avatar}\n                className={classes.large}\n              />\n              <input\n                accept=\"image/*\"\n                className={classes.input}\n                id=\"contained-button-file\"\n                multiple\n                type=\"file\"\n                ref={ImgavatarEl1}\n              />\n              <label htmlFor=\"contained-button-file\">\n                <Button variant=\"contained\" color=\"black\" component=\"span\">\n                  Upload\n                </Button>\n              </label>\n              <input\n                accept=\"image/*\"\n                className={classes.input}\n                id=\"icon-button-file\"\n                type=\"file\"\n              />\n              <label htmlFor=\"icon-button-file\">\n                <IconButton\n                  color=\"primary\"\n                  aria-label=\"upload picture\"\n                  component=\"span\"\n                >\n                  <PhotoCamera />\n                </IconButton>\n              </label>\n            </div> */}\n              <div>\n                <br />\n                <form>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-6\">\n                      <label htmlFor=\"inputDisplay\">Display name</label>\n                      <input\n                        className=\"form-control\"\n                        id=\"inputDisplay\"\n                        defaultValue={user.displayname}\n                        ref={displaynameEl1}\n                      />\n                      <small id=\"emailHelp\" className=\"form-text text-muted\">\n                        <i className=\"fas fa-exclamation\"></i> How you appear to\n                        other users on the Stack Overflow QvsA Network..\n                      </small>\n                    </div>\n                    <div className=\"form-group col-md-6\">\n                      <label htmlFor=\"inputFullname\">Full name</label>\n                      <input\n                        className=\"form-control\"\n                        id=\"inputFullname\"\n                        defaultValue={user.fullname}\n                        ref={fullnameEl1}\n                      />\n                      <small id=\"emailHelp\" className=\"form-text text-muted\">\n                        <i className=\"fas fa-exclamation\"></i> How you appear to\n                        employers, your private Teams, and to other users when\n                        you share your Developer Story.\n                      </small>\n                    </div>\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"inputTitle\">Title</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"inputTitle\"\n                      placeholder=\"What? you current position?\"\n                      defaultValue={user.title}\n                      ref={titleE1}\n                    />\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-6\">\n                      <label htmlFor=\"inputDisplay\">Where you live</label>\n                      <input\n                        className=\"form-control\"\n                        id=\"inputDisplay\"\n                        placeholder=\"Curent Location\"\n                        defaultValue={user.live}\n                        ref={liveE1}\n                      />\n                    </div>\n                    <div className=\"form-group col-md-6\">\n                      <label htmlFor=\"inputFullname\">Twiter</label>\n                      <label\n                        className=\"sr-only\"\n                        htmlFor=\"inlineFormInputGroupUsername2\"\n                      ></label>\n                      <div className=\"input-group mb-2 mr-sm-2\">\n                        <div className=\"input-group-prepend\">\n                          <div className=\"input-group-text\">\n                            <i className=\"fab fa-twitter\"></i>\n                          </div>\n                        </div>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"inlineFormInputGroupUsername2\"\n                          placeholder=\"Profile link or usemame\"\n                          defaultValue={user.twiter}\n                          ref={twiterE1}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-6\">\n                      <label htmlFor=\"inputDisplay\">Website</label>\n                      <label\n                        className=\"sr-only\"\n                        htmlFor=\"inlineFormInputGroupUsername2\"\n                      ></label>\n                      <div className=\"input-group mb-2 mr-sm-2\">\n                        <div className=\"input-group-prepend\">\n                          <div className=\"input-group-text\">\n                            <i className=\"fas fa-cogs\"></i>\n                          </div>\n                        </div>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"inlineFormInputGroupUsername2\"\n                          placeholder=\"http://example.org/\"\n                          defaultValue={user.Website}\n                          ref={WebsiteE1}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"form-group col-md-6\">\n                      <label htmlFor=\"inputFullname\">GitHub</label>\n                      <label\n                        className=\"sr-only\"\n                        htmlFor=\"inlineFormInputGroupUsername2\"\n                      ></label>\n                      <div className=\"input-group mb-2 mr-sm-2\">\n                        <div className=\"input-group-prepend\">\n                          <div className=\"input-group-text\">\n                            <i className=\"fab fa-github\"></i>\n                          </div>\n                        </div>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"inlineFormInputGroupUsername2\"\n                          placeholder=\"Profile link or usemame\"\n                          defaultValue={user.GitHub}\n                          ref={GitHubE1}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div>\n                    <br />\n                    <div className=\"alert\">\n                      <ButtonGroup\n                        orientation=\"vertical\"\n                        color=\"primary\"\n                        aria-label=\"vertical contained primary button group\"\n                        variant=\"contained\"\n                      >\n                        {/* <Button onClick={HandleSubmit} Link>\n                        Save\n                      </Button> */}\n                        <Link\n                          to={`/Edit-Profile`}\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          onClick={HandleSubmit}\n                          Link\n                        >\n                          Save\n                        </Link>\n                      </ButtonGroup>\n                      <ButtonGroup\n                        orientation=\"vertical\"\n                        color=\"primary\"\n                        aria-label=\"vertical contained primary button group\"\n                        variant=\"text\"\n                      >\n                        <Button>Cancel</Button>\n                      </ButtonGroup>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </Typography>\n          </Container>\n        </React.Fragment>\n   \n    </div>\n    </PageLayout>\n  );\n}\n",["103","104"],"D:\\core_foo\\foofaq\\src\\components\\NavigationBar\\index.js",[],"D:\\core_foo\\foofaq\\src\\components\\SearchBar\\index.js",[],"D:\\core_foo\\foofaq\\src\\common\\PageLayout\\index.js",[],"D:\\core_foo\\foofaq\\src\\common\\CustomLink.js",[],"D:\\core_foo\\foofaq\\src\\components\\UserList\\index.js",["105","106"],"import React, { useEffect, useState } from \"react\";\r\nimport SearchBar from \"../../components/SearchBar\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./index.scss\";\r\nfunction ListUser(props) {\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const [key, setKey] = useState(\"\");\r\n  const handleChangeSearch = (e) => {\r\n    setKeyword(e.target.value);\r\n  };\r\n  const handleSearch = () => {\r\n    setKey(keyword);\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n        <h1>Users</h1>\r\n      <div className=\"file-content\">\r\n      \r\n        <SearchBar\r\n          handleChangeSearch={handleChangeSearch}\r\n          handleSearch={handleSearch}\r\n        ></SearchBar>\r\n\r\n        <div className=\"section-list\">\r\n          \r\n            <ButtonGroup\r\n              disableElevation\r\n              aria-label=\"small outlined button group\"\r\n            >\r\n              <Button>Reputation</Button>\r\n              <Button>New users</Button>\r\n              <Button>Voter</Button>\r\n              <Button>Editors</Button>\r\n              <Button>Moderator</Button>\r\n            </ButtonGroup>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListUser;\r\n",{"ruleId":"107","severity":1,"message":"108","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":20},{"ruleId":"107","severity":1,"message":"111","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":17},{"ruleId":"107","severity":1,"message":"112","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":12},{"ruleId":"113","severity":1,"message":"114","line":40,"column":6,"nodeType":"115","endLine":40,"endColumn":8,"suggestions":"116"},{"ruleId":"107","severity":1,"message":"117","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":18},{"ruleId":"107","severity":1,"message":"118","line":7,"column":8,"nodeType":"109","messageId":"110","endLine":7,"endColumn":21},{"ruleId":"107","severity":1,"message":"119","line":10,"column":8,"nodeType":"109","messageId":"110","endLine":10,"endColumn":16},{"ruleId":"107","severity":1,"message":"120","line":11,"column":8,"nodeType":"109","messageId":"110","endLine":11,"endColumn":17},{"ruleId":"107","severity":1,"message":"121","line":12,"column":8,"nodeType":"109","messageId":"110","endLine":12,"endColumn":26},{"ruleId":"107","severity":1,"message":"122","line":13,"column":8,"nodeType":"109","messageId":"110","endLine":13,"endColumn":16},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"107","severity":1,"message":"108","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":20},{"ruleId":"107","severity":1,"message":"127","line":9,"column":8,"nodeType":"109","messageId":"110","endLine":9,"endColumn":13},{"ruleId":"107","severity":1,"message":"128","line":10,"column":8,"nodeType":"109","messageId":"110","endLine":10,"endColumn":14},{"ruleId":"123","replacedBy":"129"},{"ruleId":"125","replacedBy":"130"},{"ruleId":"113","severity":1,"message":"114","line":48,"column":6,"nodeType":"115","endLine":48,"endColumn":8,"suggestions":"131"},{"ruleId":"123","replacedBy":"132"},{"ruleId":"125","replacedBy":"133"},{"ruleId":"107","severity":1,"message":"134","line":16,"column":8,"nodeType":"109","messageId":"110","endLine":16,"endColumn":25},{"ruleId":"107","severity":1,"message":"135","line":15,"column":16,"nodeType":"109","messageId":"110","endLine":15,"endColumn":23},{"ruleId":"136","severity":1,"message":"137","line":39,"column":3,"nodeType":"138","messageId":"139","endLine":39,"endColumn":7},{"ruleId":"107","severity":1,"message":"140","line":48,"column":9,"nodeType":"109","messageId":"110","endLine":48,"endColumn":16},{"ruleId":"107","severity":1,"message":"141","line":54,"column":9,"nodeType":"109","messageId":"110","endLine":54,"endColumn":21},{"ruleId":"123","replacedBy":"142"},{"ruleId":"125","replacedBy":"143"},{"ruleId":"107","severity":1,"message":"144","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"145","line":8,"column":10,"nodeType":"109","messageId":"110","endLine":8,"endColumn":13},"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'Icon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["146"],"'DraftsIcon' is defined but never used.","'DashboardIcon' is defined but never used.","'WorkIcon' is defined but never used.","'EventIcon' is defined but never used.","'QuestionAnswerIcon' is defined but never used.","'MenuIcon' is defined but never used.","no-native-reassign",["147"],"no-negated-in-lhs",["148"],"'Paper' is defined but never used.","'Button' is defined but never used.",["147"],["148"],["149"],["147"],["148"],"'HeaderAsideNavbar' is defined but never used.","'NavLink' is defined but never used.","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","unexpected","'classes' is assigned a value but never used.","'ImgavatarEl1' is assigned a value but never used.",["147"],["148"],"'useEffect' is defined but never used.","'key' is assigned a value but never used.",{"desc":"150","fix":"151"},"no-global-assign","no-unsafe-negation",{"desc":"150","fix":"152"},"Update the dependencies array to be: [id]",{"range":"153","text":"154"},{"range":"155","text":"154"},[1343,1345],"[id]",[1344,1346]]