[{"D:\\coreB\\foofaq\\src\\index.js":"1","D:\\coreB\\foofaq\\src\\common\\PageLayout\\index.js":"2","D:\\coreB\\foofaq\\src\\pages\\UserProfileActivity\\index.js":"3","D:\\coreB\\foofaq\\src\\pages\\ListNewUser\\index.js":"4","D:\\coreB\\foofaq\\src\\reducers\\index.js":"5","D:\\coreB\\foofaq\\src\\partials\\BHeader\\index.js":"6","D:\\coreB\\foofaq\\src\\components\\UserProfileActivity\\index.js":"7","D:\\coreB\\foofaq\\src\\components\\UserProfileListQuestion\\index.js":"8","D:\\coreB\\foofaq\\src\\common\\CustomLink.js":"9","D:\\coreB\\foofaq\\src\\components\\QuestionCard\\index.js":"10","D:\\coreB\\foofaq\\src\\helpers\\index.js":"11","D:\\coreB\\foofaq\\src\\layout\\BLayout\\index.js":"12","D:\\coreB\\foofaq\\src\\pages\\UserDeveloperStoryAfter\\index.js":"13","D:\\coreB\\foofaq\\src\\pages\\UserListQuestion\\index.js":"14","D:\\coreB\\foofaq\\src\\components\\NavigationBar\\index.js":"15","D:\\coreB\\foofaq\\src\\components\\UserListButtonTags\\index.js":"16","D:\\coreB\\foofaq\\src\\components\\UserPagination\\index.js":"17","D:\\coreB\\foofaq\\src\\common\\PageLayoutManager\\index.js":"18","D:\\coreB\\foofaq\\src\\partials\\BMain\\index.js":"19","D:\\coreB\\foofaq\\src\\partials\\BSideBar\\index.js":"20","D:\\coreB\\foofaq\\src\\components\\UserProfileListAnswer\\index.js":"21","D:\\coreB\\foofaq\\src\\pages\\UserDeveloperStoryBefore\\UserSaveStory\\index.js":"22","D:\\coreB\\foofaq\\src\\components\\HeaderAsideNavbar\\index.js":"23","D:\\coreB\\foofaq\\src\\pages\\UserDeveloperStoryBefore\\index.js":"24","D:\\coreB\\foofaq\\src\\pages\\UserPagination\\index.js":"25","D:\\coreB\\foofaq\\src\\pages\\QuestionManager\\index.js":"26","D:\\coreB\\foofaq\\src\\components\\SearchBar\\index.js":"27","D:\\coreB\\foofaq\\src\\pages\\UserListAnswer\\index.js":"28","D:\\coreB\\foofaq\\src\\layout\\ALayout\\index.js":"29","D:\\coreB\\foofaq\\src\\helpers\\userAPI.js":"30","D:\\coreB\\foofaq\\src\\components\\QuestionTable\\index.js":"31","D:\\coreB\\foofaq\\src\\pages\\UserManager\\index.js":"32","D:\\coreB\\foofaq\\src\\pages\\FormManager\\index.js":"33","D:\\coreB\\foofaq\\src\\components\\FormManager\\User.js":"34"},{"size":2508,"mtime":1609210297205,"results":"35","hashOfConfig":"36"},{"size":407,"mtime":1609201153674,"results":"37","hashOfConfig":"36"},{"size":3376,"mtime":1609201153703,"results":"38","hashOfConfig":"36"},{"size":5214,"mtime":1609201153696,"results":"39","hashOfConfig":"36"},{"size":168,"mtime":1609201153707,"results":"40","hashOfConfig":"36"},{"size":213,"mtime":1609201153705,"results":"41","hashOfConfig":"36"},{"size":2281,"mtime":1609201153685,"results":"42","hashOfConfig":"36"},{"size":2035,"mtime":1609201153686,"results":"43","hashOfConfig":"36"},{"size":497,"mtime":1609201153673,"results":"44","hashOfConfig":"36"},{"size":2677,"mtime":1609201153681,"results":"45","hashOfConfig":"36"},{"size":6320,"mtime":1609201793260,"results":"46","hashOfConfig":"36"},{"size":1316,"mtime":1609201153693,"results":"47","hashOfConfig":"36"},{"size":3556,"mtime":1609201153699,"results":"48","hashOfConfig":"36"},{"size":3200,"mtime":1609201153701,"results":"49","hashOfConfig":"36"},{"size":7819,"mtime":1609201153681,"results":"50","hashOfConfig":"36"},{"size":740,"mtime":1609201153684,"results":"51","hashOfConfig":"36"},{"size":508,"mtime":1609207782307,"results":"52","hashOfConfig":"36"},{"size":400,"mtime":1609201153674,"results":"53","hashOfConfig":"36"},{"size":1201,"mtime":1609201153705,"results":"54","hashOfConfig":"36"},{"size":1586,"mtime":1609201153706,"results":"55","hashOfConfig":"36"},{"size":2045,"mtime":1609201153685,"results":"56","hashOfConfig":"36"},{"size":512,"mtime":1609201982083,"results":"57","hashOfConfig":"36"},{"size":4999,"mtime":1609207214865,"results":"58","hashOfConfig":"36"},{"size":9575,"mtime":1609202425903,"results":"59","hashOfConfig":"36"},{"size":584,"mtime":1609201153703,"results":"60","hashOfConfig":"36"},{"size":756,"mtime":1609210330011,"results":"61","hashOfConfig":"36"},{"size":530,"mtime":1609201153683,"results":"62","hashOfConfig":"36"},{"size":3194,"mtime":1609201153701,"results":"63","hashOfConfig":"36"},{"size":721,"mtime":1609201153692,"results":"64","hashOfConfig":"36"},{"size":1555,"mtime":1609210180316,"results":"65","hashOfConfig":"36"},{"size":1225,"mtime":1609207817305,"results":"66","hashOfConfig":"36"},{"size":4699,"mtime":1609208032502,"results":"67","hashOfConfig":"36"},{"size":660,"mtime":1609210465890,"results":"68","hashOfConfig":"36"},{"size":4376,"mtime":1609210077982,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},"r5ga4d",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"75"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"75"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"75"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"75"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"75"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"75"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"79"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"75"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"75"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"79"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"75"},"D:\\coreB\\foofaq\\src\\index.js",["157","158"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, compose, applyMiddleware } from \"redux\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport PageLayout from \"./common/PageLayout/index\";\r\nimport PageLayoutManager from \"./common/PageLayoutManager/index\";\r\nimport UserProfileActivity from \"./pages/UserProfileActivity/index\";\r\nimport ALayout from \"./layout/ALayout/index\";\r\nimport BLayout from \"./layout/BLayout/index\";\r\nimport BMain from \"./partials/BMain/index\";\r\nimport ListNewUser from \"./pages/ListNewUser/index\";\r\nimport UserDeveloperStoryAfter from \"./pages/UserDeveloperStoryAfter/index\";\r\nimport UserDeveloperStoryBefore from \"./pages/UserDeveloperStoryBefore/index\";\r\nimport UserListAnswer from \"./pages/UserListAnswer/index\";\r\nimport UserListQuestion from \"./pages/UserListQuestion/index\";\r\nimport Managers from \"./pages/QuestionManager\";\r\nimport \"./index.scss\";\r\nimport reducer from \"./reducers/index\";\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <Switch>\r\n        <ALayout exact path=\"/\" component={UserProfileActivity} />\r\n        <ALayout exact path=\"/bloglist\" component={UserProfileActivity} />\r\n        <ALayout exact path=\"/detailUser\" component={UserProfileActivity} />\r\n        <ALayout exact path=\"/edituserprofile\" component={UserProfileActivity} />\r\n        <ALayout exact path=\"/formblog\" component={UserProfileActivity} />\r\n        <BLayout exact path=\"/listnewuser\" component={ListNewUser} />\r\n        <ALayout exact path=\"/updatepost\" component={UserProfileActivity} />\r\n        <BLayout exact path=\"/userdeveloperstoryafter\" component={UserDeveloperStoryAfter} />\r\n        <ALayout exact path=\"/userdeveloperstorybefore\" component={UserDeveloperStoryBefore} />\r\n        <ALayout exact path=\"/userlistanswer\" component={UserListAnswer} />\r\n        <ALayout exact path=\"/userlistquestion\" component={UserListQuestion} />\r\n        <ALayout exact path=\"/userprofile\" component={UserProfileActivity} />\r\n        <Route path=\"/manager/\" component={Managers}></Route>\r\n        <BLayout path=\"/profile\" component={BMain} />\r\n      </Switch>\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","D:\\coreB\\foofaq\\src\\common\\PageLayout\\index.js",[],["159","160"],"D:\\coreB\\foofaq\\src\\pages\\UserProfileActivity\\index.js",["161","162"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport UserProfileActivity from \"../../components/UserProfileActivity/index\";\r\nimport ListUserButtonTags from '../../components/UserListButtonTags/index';\r\nimport \"./index.scss\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: 500,\r\n  },\r\n}));\r\n\r\nexport default function UserProfileNavbar() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.root}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab label=\"Profile\" {...a11yProps(0)} />\r\n          <Tab label=\"Activity\" {...a11yProps(1)} />\r\n          <Tab label=\"Developer Story\" {...a11yProps(2)} />\r\n          <Tab label=\"Edit Profile\" {...a11yProps(3)} />\r\n        </Tabs>\r\n        <SwipeableViews\r\n          axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n          index={value}\r\n          onChangeIndex={handleChangeIndex}\r\n        >\r\n          <TabPanel\r\n            className=\"Lower-text\"\r\n            value={value}\r\n            index={0}\r\n            dir={theme.direction}\r\n          >\r\n            detail\r\n          </TabPanel>\r\n          <TabPanel\r\n            className=\"Lower-text\"\r\n            value={value}\r\n            index={1}\r\n            dir={theme.direction}\r\n          >\r\n            <ListUserButtonTags />\r\n            <UserProfileActivity />\r\n          </TabPanel>\r\n\r\n          <TabPanel\r\n            className=\"Lower-text\"\r\n            value={value}\r\n            index={2}\r\n            dir={theme.direction}\r\n          >\r\n            developer story  \r\n          </TabPanel>\r\n          <TabPanel\r\n            className=\"Lower-text\"\r\n            value={value}\r\n            index={3}\r\n            dir={theme.direction}\r\n          >\r\n            user edit profile\r\n          </TabPanel>\r\n        </SwipeableViews>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n",["163","164"],"D:\\coreB\\foofaq\\src\\pages\\ListNewUser\\index.js",["165","166"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./index.scss\";\r\n//import Layout from \"../../layout/BLayout/index\";\r\nimport { getAllNewUserPagination,getNewUser } from \"../../helpers/index\";\r\nimport UserPagination from \"../UserPagination/index\";\r\nexport default function Form() {\r\n  const [users, setUsers] = useState([]);\r\n  const [totalPage, setUserTotalPage] = useState([]);\r\n\r\n   // de phan trang that thi can \r\n   const [page, setPage] = useState(1);\r\n   let perPage = 10; // 10 user/page\r\n   let count = parseInt(totalPage.length) / perPage;//tong so trang \r\n\r\n\r\n  // b1: Ok dau tien ta phai lay toan bo user de tinh tong so trang roi sau do moi thao tung trang theo perpage\r\n  useEffect(() => {\r\n    (async () => {\r\n      const usersData = await getNewUser();\r\n      setUserTotalPage(usersData);\r\n    })();\r\n  }, []);\r\n\r\n  // buoc 2 : thao tung theo trang\r\n  useEffect(() => {\r\n    (async () => {\r\n      const usersData = await getAllNewUserPagination(page,perPage);\r\n      setUsers(usersData);\r\n      // console.log(usersData);\r\n    })();\r\n    // page hoac perPage thay doi thi ham nay tiep tuc chay ko thi thooi\r\n  }, [page,perPage]);\r\n  // moi khi click page khac thi lai query sang trang khac\r\n  const handleChange = (event, value) => {\r\n    // khi nhan vao page tuong ung se set lai page\r\n    setPage(value);\r\n  };\r\n\r\n \r\n\r\n\r\n  //  Dua all user vao danh sach cac phan tu html\r\n  const listItems = users.map((item) => (\r\n    <div className=\"col-md-4\" key={item.id}>\r\n      <div className=\"item mb-5\">\r\n        <div className=\"media\">\r\n          <img\r\n            className=\"mr-3 img-fluid post-thumb d-none d-md-flex\"\r\n            src={item.avatar}\r\n            alt=\"image\"\r\n          />\r\n          <div className=\"media-body\">\r\n            <h5 className=\"title mb-1\">\r\n              <a href>\r\n                <small>{item.name}</small>\r\n              </a>\r\n            </h5>\r\n            <small className=\"meta mb-1\">\r\n              <span className=\"date\">{item.content}</span>\r\n            </small>\r\n            <div className=\"intro\">\r\n              <small>Franch</small>\r\n            </div>\r\n            {/* <a class=\"more-link\" href=\"\">sql,<span>mysql</span></a> */}\r\n            <span>\r\n              <a href=\"#\">{item.branch}</a>\r\n            </span>\r\n          </div>\r\n          {/*//media-body*/}\r\n        </div>\r\n        {/*//media*/}\r\n      </div>\r\n      {/*//item*/}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n   \r\n      <div className=\"container\">\r\n        <h2>User</h2>\r\n        {/* <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarText\"\r\n            aria-controls=\"navbarText\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <form className=\"form-inline my-2 my-lg-0\">\r\n                  <input\r\n                    className=\"form-control mr-sm-2 form-search\"\r\n                    type=\"search\"\r\n                    aria-label=\"Search\"\r\n                  />\r\n                  <div\r\n                    className=\"s-input s-input__search h100\"\r\n                    autoComplete=\"off\"\r\n                    type=\"text\"\r\n                  >\r\n                    Filter by user\r\n                  </div>\r\n                  <span className=\"button-search\">\r\n                    <i className=\"fas fa-search\" />\r\n                  </span>\r\n                </form>\r\n              </li>\r\n            </ul>\r\n            <span className=\"navbar-text\">\r\n              <div\r\n                className=\"btn-group mr-2\"\r\n                role=\"group\"\r\n                aria-label=\"First group\"\r\n              >\r\n                <button type=\"button\" className=\"btn btn-secondary active\">\r\n                  Reputation\r\n                </button>\r\n                <button type=\"button\" className=\"btn btn-secondary\">\r\n                  New users\r\n                </button>\r\n                <button type=\"button\" className=\"btn btn-secondary\">\r\n                  Voters\r\n                </button>\r\n                <button type=\"button\" className=\"btn btn-secondary\">\r\n                  Editors\r\n                </button>\r\n                <button type=\"button\" className=\"btn btn-secondary\">\r\n                  Moderators\r\n                </button>\r\n              </div>\r\n            </span>\r\n          </div>\r\n        </nav> */}\r\n        {/* Container */}\r\n        <section className=\"blog-list px-3 py-5 p-md-5\">\r\n          <div className=\"row\">\r\n            {/* XAC DINH DOAN CAN SU DUNG VONG LAP OK LAP TAI DAY */}\r\n            {/* de o day la ra het */}\r\n            {listItems}\r\n          </div>\r\n          {/* PHAN TRANG CHO NO SU DUNG MATERIAL UI CO HO TRO SAN ROI */}\r\n         {/* gio ta co tong so trang thuc su */}\r\n          <UserPagination tongTrang={count} OnThayDoi={handleChange} />\r\n        </section>\r\n      </div>\r\n   \r\n  );\r\n}\r\n","D:\\coreB\\foofaq\\src\\reducers\\index.js",[],["167","168"],"D:\\coreB\\foofaq\\src\\partials\\BHeader\\index.js",[],"D:\\coreB\\foofaq\\src\\components\\UserProfileActivity\\index.js",["169"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {getOneUser} from '../../helpers/userAPI';\r\nimport \"./index.scss\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\nexport default function SimpleCard() {\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState({});\r\n  useEffect( async() => {\r\n   const data =  await getOneUser();\r\n   setUser(data);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            Answers ({user.number_answer})\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            You have not answered any questions\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            Questions ({user.number_question})\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            You have not asked any questions\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            Followed posts ({user.number_follow_post})\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            You are not following any posts.\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            Tags ({user.number_tag})\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            You have not participated in any tags\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","D:\\coreB\\foofaq\\src\\components\\UserProfileListQuestion\\index.js",[],"D:\\coreB\\foofaq\\src\\common\\CustomLink.js",[],"D:\\coreB\\foofaq\\src\\components\\QuestionCard\\index.js",["170","171","172","173","174","175","176","177","178","179","180","181"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport moment from \"moment\";\r\n\r\n// components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n// icons\r\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport QuestionAnswerIcon from \"@material-ui/icons/QuestionAnswer\";\r\n\r\n// custom style\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: \"0.5rem\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: \"auto\",\r\n    maxWidth: 800,\r\n  },\r\n  vote: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: \"0.5rem 0.5rem 0 0\",\r\n    },\r\n  },\r\n  views: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: \"0.5rem 0.5rem 0 0\",\r\n    },\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  buttonView: {\r\n    height: \"50px\",\r\n  },\r\n  footerCard: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst QuestionCard = ({ question }) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    title,\r\n    description\r\n  } = question;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Grid container spacing={2}>\r\n          {/* content */}\r\n          <Grid item xs={12} sm container>\r\n            <Grid item xs container direction=\"column\" spacing={2}>\r\n              <Grid item xs>\r\n                <Link gutterBottom variant=\"h5\">\r\n                  {title}\r\n                </Link>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  {description.length <= 150\r\n                    ? description\r\n                    : description.slice(0, 150) + \"...\"}\r\n                </Typography>\r\n              \r\n               \r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionCard;",["182","183"],"D:\\coreB\\foofaq\\src\\helpers\\index.js",[],"D:\\coreB\\foofaq\\src\\layout\\BLayout\\index.js",["184","185","186"],"import React, { Component, useState } from \"react\";\r\nimport { Route, Redirect,Link } from \"react-router-dom\";\r\nimport BHeader from \"../../partials/BHeader/index\";\r\nimport BSideBar from \"../../partials/BSideBar/index\";\r\n\r\nimport \"./index.scss\";\r\n\r\nconst BLayout = ({ children, ...rest }) => {\r\n  return (\r\n    <div className=\"container-blayout\">\r\n  {/* HEADER */}\r\n    <BHeader/>\r\n      <main>\r\n        <div className=\"row\">\r\n          <div className=\"left col-lg-4\">\r\n            {/* SIDE BAR */}\r\n            <BSideBar/>\r\n          </div>\r\n          <div className=\"right col-lg-8\">\r\n            <ul className=\"nav\">\r\n              <li>Gallery</li>\r\n              <li>Collections</li>\r\n              <li>Groups</li>\r\n              <li> <Link to=\"/\">Home</Link></li>\r\n            </ul>\r\n            <span className=\"follow\">Follow</span>\r\n\r\n            <div className=\"row gallery\">\r\n              {/* MAIN CONTENT */}\r\n                {children}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\nconst BLayoutRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(routeProps) => (\r\n        <BLayout>\r\n          <Component {...routeProps} />\r\n        </BLayout>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BLayoutRoute;\r\n","D:\\coreB\\foofaq\\src\\pages\\UserDeveloperStoryAfter\\index.js",["187","188"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport {getUserOne} from '../../helpers/index'\r\nimport \"./index.scss\";\r\nexport default function Form () {\r\n\r\n  \r\n  const [users, setUsers] = useState([]);\r\n  //get queston\r\n  useEffect  (() => {\r\n\r\n    (async () => {\r\n      const usersData = await getUserOne();\r\n      setUsers(usersData);\r\n    }) ();\r\n\r\n\r\n  }, []);\r\n   \r\n        return (\r\n            <div>\r\n                  {/* START FORM */}\r\n      <div className=\"container text-center full\">\r\n        <div className=\"alert\">\r\n          <img width=\"100%\" src={users.avatar} alt=\"\"/>\r\n          <div className=\"name\">{users.name}</div>\r\n          <p className=\"text-one\">Lorem ipsum dolor sit amet consectetur adipisicing elit </p>\r\n          <ul>\r\n            <li>\r\n              <a href><i className=\"fas fa-map-marker-alt\" /><span> {users.local}</span></a>\r\n            </li>\r\n            <li>\r\n              <a href><i className=\"fas fa-blog\" /><span>Personal site</span></a>\r\n            </li>\r\n            <li>\r\n              <a href><i className=\"fab fa-twitter\" /><span>Twitter</span></a>\r\n            </li>\r\n            <li>\r\n              <a href><i className=\"fab fa-github\" /><span>GitHub</span></a>\r\n            </li>\r\n            <p className=\"text-two\">Last active on Stack Overflow today</p>\r\n          </ul>\r\n          <button type=\"button\" className=\"btn btn-primary nut\">Edit</button>\r\n          <button type=\"button\" className=\"btn btn-light buttoni\"><i className=\"fab fa-stack-overflow\" /> <span>1</span> </button>\r\n        </div>\r\n        <div className=\"card showhide\">\r\n          <div className=\"card-body\">\r\n            Tell a little more about yourself as a developer\r\n          </div>\r\n          <p className=\"button-show\">Add personal statement</p>\r\n        </div>\r\n      </div>\r\n      {/* END FORM */}\r\n      \r\n      {/*  */}\r\n      <div className=\"container\">\r\n      <div className=\"nenxanh\">\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label className=\"trai\">Personal statement</label>\r\n            <textarea className=\"form-control\" placeholder=\"Share what you enjoy working on, what inspires you, or what you hope to build someday. It's a quick, simple way to convey what makes you unique.\" rows={3} defaultValue={\"\"} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"form-check\">\r\n              <input className=\"form-check-input\" type=\"checkbox\" defaultValue required />\r\n              <label className=\"form-check-label\">\r\n                Agree to terms and conditions\r\n              </label>\r\n              <div className=\"invalid-feedback\">\r\n                Only show your personal statement to employers\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-row \">\r\n            <div className=\"form-group col-md-6 trai \">\r\n              <label>Favorite editor</label>\r\n              <input type className=\"form-control\" placeholder=\"Sublime, Vim, atom...\" />\r\n            </div>\r\n            <div className=\"form-group col-md-6 trai\">\r\n              <label>First computer</label>\r\n              <input type className=\"form-control\" placeholder=\"Dell OptiPlex 486SX/25, Amiga 500\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"back-button\">\r\n            <a href=\"#\" className=\"btn btn-primary \">Save</a>\r\n            <a href=\"#\" className=\"btn btn-white button-show\">Cancel</a>\r\n          </div>\r\n        </form>\r\n      </div>\r\n        </div>\r\n            </div>\r\n        )\r\n    }\r\n","D:\\coreB\\foofaq\\src\\pages\\UserListQuestion\\index.js",["189","190","191","192","193","194"],"import React, { useState, useEffect } from \"react\";\r\nimport { Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ListUserButtonTags from '../../components/UserListButtonTags/index';\r\nimport UserProfileListQuestion from '../../components/UserProfileListQuestion/index';\r\nimport \"./index.scss\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: 500,\r\n  },\r\n}));\r\n\r\nexport default function UserProfileNavbar() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.root}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab label=\"Activity\" {...a11yProps(0)} />\r\n          <Tab label=\"Developer Story\" {...a11yProps(2)} />\r\n          <Tab label=\"Edit Profile\" {...a11yProps(3)} />\r\n        </Tabs>\r\n        <SwipeableViews\r\n          axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n          index={value}\r\n          onChangeIndex={handleChangeIndex}\r\n        >\r\n          <TabPanel\r\n            className=\"Lower-text\"\r\n            value={value}\r\n            index={0}\r\n            dir={theme.direction}\r\n          >\r\n            <ListUserButtonTags />\r\n           <UserProfileListQuestion/>\r\n          </TabPanel>\r\n          <TabPanel\r\n            className=\"Lower-text\"\r\n            value={value}\r\n            index={2}\r\n            dir={theme.direction}\r\n          >\r\n            developer story\r\n          </TabPanel>\r\n          <TabPanel\r\n            className=\"Lower-text\"\r\n            value={value}\r\n            index={3}\r\n            dir={theme.direction}\r\n          >\r\n            user edit profile\r\n          </TabPanel>\r\n        </SwipeableViews>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","D:\\coreB\\foofaq\\src\\components\\NavigationBar\\index.js",[],"D:\\coreB\\foofaq\\src\\components\\UserListButtonTags\\index.js",[],["195","196"],"D:\\coreB\\foofaq\\src\\components\\UserPagination\\index.js",[],"D:\\coreB\\foofaq\\src\\common\\PageLayoutManager\\index.js",[],"D:\\coreB\\foofaq\\src\\partials\\BMain\\index.js",["197","198","199","200","201","202"],"import React from \"react\";\r\nfunction BMain(params) {\r\n  return (\r\n    <>\r\n      <div className=\"col-md-4\">\r\n        <img src=\"https://images.pexels.com/photos/1036371/pexels-photo-1036371.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\" />\r\n      </div>\r\n      <div className=\"col-md-4\">\r\n        <img src=\"https://images.pexels.com/photos/861034/pexels-photo-861034.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\" />\r\n      </div>\r\n      <div className=\"col-md-4\">\r\n        <img src=\"https://images.pexels.com/photos/113338/pexels-photo-113338.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\" />\r\n      </div>\r\n      <div className=\"col-md-4\">\r\n        <img src=\"https://images.pexels.com/photos/5049/forest-trees-fog-foggy.jpg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\" />\r\n      </div>\r\n      <div className=\"col-md-4\">\r\n        <img src=\"https://images.pexels.com/photos/428431/pexels-photo-428431.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\" />\r\n      </div>\r\n      <div className=\"col-md-4\">\r\n        <img src=\"https://images.pexels.com/photos/50859/pexels-photo-50859.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\" />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default BMain;\r\n","D:\\coreB\\foofaq\\src\\partials\\BSideBar\\index.js",["203"],"import React from \"react\";\r\nfunction BSideBar(params) {\r\n  return (\r\n    <>\r\n      <div className=\"photo-left\">\r\n        <img\r\n          className=\"photo\"\r\n          src=\"https://images.pexels.com/photos/1804796/pexels-photo-1804796.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\"\r\n        />\r\n        <div className=\"active\" />\r\n      </div>\r\n      <h4 className=\"name\">Jane Doe</h4>\r\n      <p className=\"info\">UI/UX Designer</p>\r\n      <p className=\"info\">jane.doe@gmail.com</p>\r\n      <div className=\"stats row\">\r\n        <div className=\"stat col-xs-4\" style={{ paddingRight: \"50px\" }}>\r\n          <p className=\"number-stat\">3,619</p>\r\n          <p className=\"desc-stat\">Followers</p>\r\n        </div>\r\n        <div className=\"stat col-xs-4\">\r\n          <p className=\"number-stat\">42</p>\r\n          <p className=\"desc-stat\">Following</p>\r\n        </div>\r\n        <div className=\"stat col-xs-4\" style={{ paddingLeft: \"50px\" }}>\r\n          <p className=\"number-stat\">38</p>\r\n          <p className=\"desc-stat\">Uploads</p>\r\n        </div>\r\n      </div>\r\n      <p className=\"desc\">\r\n        Hi ! My name is Jane Doe. I'm a UI/UX Designer from Paris, in France. I\r\n        really enjoy photography and mountains.\r\n      </p>\r\n      <div className=\"social\">\r\n        <i className=\"fa fa-facebook-square\" aria-hidden=\"true\" />\r\n        <i className=\"fa fa-twitter-square\" aria-hidden=\"true\" />\r\n        <i className=\"fa fa-pinterest-square\" aria-hidden=\"true\" />\r\n        <i className=\"fa fa-tumblr-square\" aria-hidden=\"true\" />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default BSideBar;\r\n","D:\\coreB\\foofaq\\src\\components\\UserProfileListAnswer\\index.js",[],"D:\\coreB\\foofaq\\src\\pages\\UserDeveloperStoryBefore\\UserSaveStory\\index.js",[],"D:\\coreB\\foofaq\\src\\components\\HeaderAsideNavbar\\index.js",[],"D:\\coreB\\foofaq\\src\\pages\\UserDeveloperStoryBefore\\index.js",["204","205","206"],"//hook call api:\r\nimport React, {useState, useEffect } from \"react\";\r\nimport { API_ONE_USERSTORY } from \"../../helpers/index\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport UserSaveStory from \"./UserSaveStory/index\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"./index.scss\";\r\n\r\n\r\nconst index = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  root: {\r\n    width: \"30%\",\r\n    maxWidth: 360,\r\n\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function ImageAvatars() {\r\n  const classes = index();\r\n  const [user, setUser] = useState({});\r\n  const [userSave, setUserSave] = useState(false);\r\n  const displaynameEl1 = React.useRef(null);\r\n  const titleE1 = React.useRef(null);\r\n  const fullnameEl1 = React.useRef(null);\r\n\r\n  const liveE1 = React.useRef(null);\r\n  const twiterE1 = React.useRef(null);\r\n  const WebsiteE1 = React.useRef(null);\r\n  const GitHubE1 = React.useRef(null);\r\n  //Method: Get\r\n  useEffect(() => {\r\n    fetch(`${API_ONE_USERSTORY}`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        //  console.log(response);\r\n        setUser(response);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n  const HandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetch(`${API_ONE_USERSTORY}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n\r\n      body: JSON.stringify({\r\n        displayname: displaynameEl1.current.value,\r\n        fullname: fullnameEl1.current.value,\r\n        title: titleE1.current.value,\r\n        live: liveE1.current.value,\r\n        twiter: twiterE1.current.value,\r\n        Website: WebsiteE1.current.value,\r\n        GitHub: GitHubE1.current.value,\r\n      }),\r\n    }).then((response) => {\r\n      // console.log(response);\r\n      setUserSave(true);\r\n    });\r\n  };\r\n  return (\r\n      <div className=\"alert alert-info container\">\r\n        <React.Fragment>\r\n          <CssBaseline />\r\n          <Container>\r\n            <Typography component=\"div\">\r\n              <div>\r\n                <br />\r\n                <form>\r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-6\">\r\n                      <label htmlFor=\"inputDisplay\">Display name</label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        id=\"inputDisplay\"\r\n                        defaultValue={user.displayname}\r\n                        ref={displaynameEl1}\r\n                      />\r\n                      <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                        <i className=\"fas fa-exclamation\"></i> How you appear to\r\n                        other users on the Stack Overflow QvsA Network..\r\n                      </small>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                      <label htmlFor=\"inputFullname\">Full name</label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        id=\"inputFullname\"\r\n                        defaultValue={user.fullname}\r\n                        ref={fullnameEl1}\r\n                      />\r\n                      <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                        <i className=\"fas fa-exclamation\"></i> How you appear to\r\n                        employers, your private Teams, and to other users when\r\n                        you share your Developer Story.\r\n                      </small>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"inputTitle\">Title</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"inputTitle\"\r\n                      placeholder=\"What? you current position?\"\r\n                      defaultValue={user.title}\r\n                      ref={titleE1}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-6\">\r\n                      <label htmlFor=\"inputDisplay\">Where you live</label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        id=\"inputDisplay\"\r\n                        placeholder=\"Curent Location\"\r\n                        defaultValue={user.live}\r\n                        ref={liveE1}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                      <label htmlFor=\"inputFullname\">Twiter</label>\r\n                      <label\r\n                        className=\"sr-only\"\r\n                        htmlFor=\"inlineFormInputGroupUsername2\"\r\n                      ></label>\r\n                      <div className=\"input-group mb-2 mr-sm-2\">\r\n                        <div className=\"input-group-prepend\">\r\n                          <div className=\"input-group-text\">\r\n                            <i className=\"fab fa-twitter\"></i>\r\n                          </div>\r\n                        </div>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          id=\"inlineFormInputGroupUsername2\"\r\n                          placeholder=\"Profile link or usemame\"\r\n                          defaultValue={user.twiter}\r\n                          ref={twiterE1}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-6\">\r\n                      <label htmlFor=\"inputDisplay\">Website</label>\r\n                      <label\r\n                        className=\"sr-only\"\r\n                        htmlFor=\"inlineFormInputGroupUsername2\"\r\n                      ></label>\r\n                      <div className=\"input-group mb-2 mr-sm-2\">\r\n                        <div className=\"input-group-prepend\">\r\n                          <div className=\"input-group-text\">\r\n                            <i className=\"fas fa-cogs\"></i>\r\n                          </div>\r\n                        </div>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          id=\"inlineFormInputGroupUsername2\"\r\n                          placeholder=\"http://example.org/\"\r\n                          defaultValue={user.Website}\r\n                          ref={WebsiteE1}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                      <label htmlFor=\"inputFullname\">GitHub</label>\r\n                      <label\r\n                        className=\"sr-only\"\r\n                        htmlFor=\"inlineFormInputGroupUsername2\"\r\n                      ></label>\r\n                      <div className=\"input-group mb-2 mr-sm-2\">\r\n                        <div className=\"input-group-prepend\">\r\n                          <div className=\"input-group-text\">\r\n                            <i className=\"fab fa-github\"></i>\r\n                          </div>\r\n                        </div>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          id=\"inlineFormInputGroupUsername2\"\r\n                          placeholder=\"Profile link or usemame\"\r\n                          defaultValue={user.GitHub}\r\n                          ref={GitHubE1}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <br />\r\n                    <div className=\"alert\">\r\n                      <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        color=\"primary\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\"\r\n                      >\r\n                        <Button onClick={HandleSubmit} Link>\r\n                        Save\r\n                      </Button>\r\n                      </ButtonGroup>\r\n                      <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        color=\"primary\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"text\"\r\n                      >\r\n                        <Button>Cancel</Button>\r\n                      </ButtonGroup>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </Typography>\r\n          </Container>\r\n        </React.Fragment>\r\n        {userSave ? <UserSaveStory /> : null}\r\n      </div>\r\n   \r\n  );\r\n}\r\n","D:\\coreB\\foofaq\\src\\pages\\UserPagination\\index.js",[],"D:\\coreB\\foofaq\\src\\pages\\QuestionManager\\index.js",[],"D:\\coreB\\foofaq\\src\\components\\SearchBar\\index.js",[],"D:\\coreB\\foofaq\\src\\pages\\UserListAnswer\\index.js",["207","208","209","210","211","212"],"import React, { useState, useEffect } from \"react\";\r\nimport { Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ListUserButtonTags from '../../components/UserListButtonTags/index';\r\nimport UserProfileListAnswer from '../../components/UserProfileListAnswer/index';\r\nimport \"./index.scss\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: 500,\r\n  },\r\n}));\r\n\r\nexport default function UserProfileNavbar() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.root}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab label=\"Activity\" {...a11yProps(0)} />\r\n          <Tab label=\"Developer Story\" {...a11yProps(2)} />\r\n          <Tab label=\"Edit Profile\" {...a11yProps(3)} />\r\n        </Tabs>\r\n        <SwipeableViews\r\n          axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n          index={value}\r\n          onChangeIndex={handleChangeIndex}\r\n        >\r\n          <TabPanel\r\n            className=\"Lower-text\"\r\n            value={value}\r\n            index={0}\r\n            dir={theme.direction}\r\n          >\r\n            <ListUserButtonTags />\r\n           <UserProfileListAnswer/>\r\n          </TabPanel>\r\n          <TabPanel\r\n            className=\"Lower-text\"\r\n            value={value}\r\n            index={2}\r\n            dir={theme.direction}\r\n          >\r\n            developer story\r\n          </TabPanel>\r\n          <TabPanel\r\n            className=\"Lower-text\"\r\n            value={value}\r\n            index={3}\r\n            dir={theme.direction}\r\n          >\r\n            user edit profile\r\n          </TabPanel>\r\n        </SwipeableViews>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","D:\\coreB\\foofaq\\src\\layout\\ALayout\\index.js",["213","214","215"],"import React, { Component, useState } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n//  MUI components\r\nimport Container from \"@material-ui/core/Container\";\r\n//import component\r\nimport NavigationBar from \"../../components/NavigationBar/index\";\r\nimport \"./index.scss\";\r\n\r\nconst ALayout = ({ children, ...rest }) => {\r\n  return (\r\n    <>\r\n      <NavigationBar />\r\n      <Container>{children}</Container>\r\n    </>\r\n  );\r\n};\r\nconst ALayoutRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(routeProps) => (\r\n        <ALayout>\r\n          <Component {...routeProps} />\r\n        </ALayout>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ALayoutRoute;\r\n","D:\\coreB\\foofaq\\src\\helpers\\userAPI.js",[],"D:\\coreB\\foofaq\\src\\components\\QuestionTable\\index.js",["216","217","218"],"D:\\coreB\\foofaq\\src\\pages\\UserManager\\index.js",[],"D:\\coreB\\foofaq\\src\\pages\\FormManager\\index.js",[],"D:\\coreB\\foofaq\\src\\components\\FormManager\\User.js",["219"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { getUser, AddUser, UpdateUser } from \"../../helpers/userAPI\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  button: {\r\n    margin: \"10px auto\",\r\n  },\r\n}));\r\n\r\nfunction UserForm(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState([]);\r\n  const [user_name, setName] = useState(\"\");\r\n  const [user_email, setEmail] = useState(\"\");\r\n  const [user_password, setPassword] = useState(\"\");\r\n  let { id } = useParams();\r\n\r\n  let handleSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  useEffect(() => {\r\n    (async () => {\r\n      const user = await getUser(id);\r\n      setUser(user);\r\n      console.log(\"day ka L \", user);\r\n    })();\r\n  }, []);\r\n  if (id === undefined) {\r\n    handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      AddUser(id, user_email, user_password, user_name)\r\n        .then(function (response) {\r\n          setOpen(true);\r\n          window.location.reload();\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    };\r\n  } else {\r\n    handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      UpdateUser(id, user_name, user_password,user_email)\r\n        .then(function (response) {\r\n          setOpen(true);\r\n          window.location.reload();\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    };\r\n  }\r\n  console.log(user.user_name);\r\n\r\n  return (\r\n    <div>\r\n      <h1> User Form</h1>\r\n\r\n      <div className={classes.root}>\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputName\">Name</label>\r\n            <input\r\n              \r\n              className=\"form-control\"\r\n              aria-describedby=\"namelHelp\"\r\n              placeholder=\"Name...\"\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n              }}\r\n              defaultValue={user.user_name}\r\n            />\r\n\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n              We'll never share your name with anyone else.\r\n            </small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"exampleInputPassword1\"\r\n              placeholder=\"Password...\"\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n              defaultValue={user.user_password}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n             \r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"email....\"\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n              defaultValue={user.user_email}\r\n              variant=\"outlined\"\r\n            />\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </small>\r\n          </div>\r\n          <Button\r\n            onClick={handleSubmit}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n          >\r\n            Send\r\n          </Button>\r\n        \r\n        </form>\r\n      </div>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          This is a success message!\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserForm;\r\n",{"ruleId":"220","severity":1,"message":"221","line":8,"column":8,"nodeType":"222","messageId":"223","endLine":8,"endColumn":18},{"ruleId":"220","severity":1,"message":"224","line":9,"column":8,"nodeType":"222","messageId":"223","endLine":9,"endColumn":25},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"220","severity":1,"message":"229","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"230","line":1,"column":27,"nodeType":"222","messageId":"223","endLine":1,"endColumn":36},{"ruleId":"225","replacedBy":"231"},{"ruleId":"227","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":47,"column":11,"nodeType":"235","endLine":51,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":66,"column":15,"nodeType":"235","endLine":66,"endColumn":27},{"ruleId":"225","replacedBy":"238"},{"ruleId":"227","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":28,"column":14,"nodeType":"242","endLine":31,"endColumn":4},{"ruleId":"220","severity":1,"message":"243","line":3,"column":8,"nodeType":"222","messageId":"223","endLine":3,"endColumn":14},{"ruleId":"220","severity":1,"message":"244","line":10,"column":8,"nodeType":"222","messageId":"223","endLine":10,"endColumn":18},{"ruleId":"220","severity":1,"message":"245","line":11,"column":8,"nodeType":"222","messageId":"223","endLine":11,"endColumn":12},{"ruleId":"220","severity":1,"message":"246","line":12,"column":8,"nodeType":"222","messageId":"223","endLine":12,"endColumn":16},{"ruleId":"220","severity":1,"message":"247","line":13,"column":8,"nodeType":"222","messageId":"223","endLine":13,"endColumn":20},{"ruleId":"220","severity":1,"message":"248","line":14,"column":8,"nodeType":"222","messageId":"223","endLine":14,"endColumn":22},{"ruleId":"220","severity":1,"message":"249","line":15,"column":8,"nodeType":"222","messageId":"223","endLine":15,"endColumn":14},{"ruleId":"220","severity":1,"message":"250","line":16,"column":8,"nodeType":"222","messageId":"223","endLine":16,"endColumn":14},{"ruleId":"220","severity":1,"message":"251","line":19,"column":8,"nodeType":"222","messageId":"223","endLine":19,"endColumn":23},{"ruleId":"220","severity":1,"message":"252","line":20,"column":8,"nodeType":"222","messageId":"223","endLine":20,"endColumn":25},{"ruleId":"220","severity":1,"message":"253","line":21,"column":8,"nodeType":"222","messageId":"223","endLine":21,"endColumn":22},{"ruleId":"220","severity":1,"message":"254","line":22,"column":8,"nodeType":"222","messageId":"223","endLine":22,"endColumn":26},{"ruleId":"225","replacedBy":"255"},{"ruleId":"227","replacedBy":"256"},{"ruleId":"220","severity":1,"message":"257","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"229","line":1,"column":28,"nodeType":"222","messageId":"223","endLine":1,"endColumn":36},{"ruleId":"220","severity":1,"message":"258","line":2,"column":17,"nodeType":"222","messageId":"223","endLine":2,"endColumn":25},{"ruleId":"236","severity":1,"message":"237","line":85,"column":13,"nodeType":"235","endLine":85,"endColumn":54},{"ruleId":"236","severity":1,"message":"237","line":86,"column":13,"nodeType":"235","endLine":86,"endColumn":63},{"ruleId":"220","severity":1,"message":"229","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"230","line":1,"column":27,"nodeType":"222","messageId":"223","endLine":1,"endColumn":36},{"ruleId":"220","severity":1,"message":"259","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":16},{"ruleId":"220","severity":1,"message":"260","line":2,"column":18,"nodeType":"222","messageId":"223","endLine":2,"endColumn":24},{"ruleId":"220","severity":1,"message":"261","line":2,"column":26,"nodeType":"222","messageId":"223","endLine":2,"endColumn":31},{"ruleId":"220","severity":1,"message":"262","line":2,"column":33,"nodeType":"222","messageId":"223","endLine":2,"endColumn":37},{"ruleId":"225","replacedBy":"263"},{"ruleId":"227","replacedBy":"264"},{"ruleId":"265","severity":1,"message":"266","line":6,"column":9,"nodeType":"235","endLine":6,"endColumn":134},{"ruleId":"265","severity":1,"message":"266","line":9,"column":9,"nodeType":"235","endLine":9,"endColumn":132},{"ruleId":"265","severity":1,"message":"266","line":12,"column":9,"nodeType":"235","endLine":12,"endColumn":132},{"ruleId":"265","severity":1,"message":"266","line":15,"column":9,"nodeType":"235","endLine":15,"endColumn":132},{"ruleId":"265","severity":1,"message":"266","line":18,"column":9,"nodeType":"235","endLine":18,"endColumn":132},{"ruleId":"265","severity":1,"message":"266","line":21,"column":9,"nodeType":"235","endLine":21,"endColumn":130},{"ruleId":"265","severity":1,"message":"266","line":6,"column":9,"nodeType":"235","endLine":9,"endColumn":11},{"ruleId":"220","severity":1,"message":"221","line":13,"column":8,"nodeType":"222","messageId":"223","endLine":13,"endColumn":18},{"ruleId":"267","severity":1,"message":"268","line":35,"column":3,"nodeType":"269","messageId":"270","endLine":35,"endColumn":7},{"ruleId":"220","severity":1,"message":"271","line":44,"column":9,"nodeType":"222","messageId":"223","endLine":44,"endColumn":16},{"ruleId":"220","severity":1,"message":"229","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"230","line":1,"column":27,"nodeType":"222","messageId":"223","endLine":1,"endColumn":36},{"ruleId":"220","severity":1,"message":"259","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":16},{"ruleId":"220","severity":1,"message":"260","line":2,"column":18,"nodeType":"222","messageId":"223","endLine":2,"endColumn":24},{"ruleId":"220","severity":1,"message":"261","line":2,"column":26,"nodeType":"222","messageId":"223","endLine":2,"endColumn":31},{"ruleId":"220","severity":1,"message":"262","line":2,"column":33,"nodeType":"222","messageId":"223","endLine":2,"endColumn":37},{"ruleId":"220","severity":1,"message":"257","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"229","line":1,"column":28,"nodeType":"222","messageId":"223","endLine":1,"endColumn":36},{"ruleId":"220","severity":1,"message":"258","line":2,"column":17,"nodeType":"222","messageId":"223","endLine":2,"endColumn":25},{"ruleId":"220","severity":1,"message":"272","line":3,"column":10,"nodeType":"222","messageId":"223","endLine":3,"endColumn":20},{"ruleId":"220","severity":1,"message":"273","line":9,"column":8,"nodeType":"222","messageId":"223","endLine":9,"endColumn":13},{"ruleId":"220","severity":1,"message":"250","line":10,"column":8,"nodeType":"222","messageId":"223","endLine":10,"endColumn":14},{"ruleId":"240","severity":1,"message":"274","line":49,"column":6,"nodeType":"275","endLine":49,"endColumn":8,"suggestions":"276"},"no-unused-vars","'PageLayout' is defined but never used.","Identifier","unusedVar","'PageLayoutManager' is defined but never used.","no-native-reassign",["277"],"no-negated-in-lhs",["278"],"'useState' is defined but never used.","'useEffect' is defined but never used.",["277"],["278"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["277"],["278"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'moment' is defined but never used.","'IconButton' is defined but never used.","'Chip' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'ListItemAvatar' is defined but never used.","'Avatar' is defined but never used.","'Button' is defined but never used.","'ArrowDropUpIcon' is defined but never used.","'ArrowDropDownIcon' is defined but never used.","'VisibilityIcon' is defined but never used.","'QuestionAnswerIcon' is defined but never used.",["277"],["278"],"'Component' is defined but never used.","'Redirect' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.",["277"],["278"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","unexpected","'classes' is assigned a value but never used.","'makeStyles' is defined but never used.","'Paper' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["279"],"no-global-assign","no-unsafe-negation",{"desc":"280","fix":"281"},"Update the dependencies array to be: [id]",{"range":"282","text":"283"},[1329,1331],"[id]"]