[{"K:\\React project\\foofaq\\src\\reducers\\index.js":"1","K:\\React project\\foofaq\\src\\components\\AdvancedFilter\\index.js":"2","K:\\React project\\foofaq\\src\\common\\CustomLink.js":"3","K:\\React project\\foofaq\\src\\components\\NavigationBar\\index.js":"4","K:\\React project\\foofaq\\src\\pages\\QuestionList\\index.js":"5","K:\\React project\\foofaq\\src\\components\\QuestionCard\\index.js":"6","K:\\React project\\foofaq\\src\\common\\PageLayout\\index.js":"7","K:\\React project\\foofaq\\src\\index.js":"8","K:\\React project\\foofaq\\src\\pages\\QuestionList\\classes.js":"9"},{"size":168,"mtime":1607697970384,"results":"10","hashOfConfig":"11"},{"size":4037,"mtime":1609081197340,"results":"12","hashOfConfig":"11"},{"size":497,"mtime":1607697970197,"results":"13","hashOfConfig":"11"},{"size":7619,"mtime":1609124594982,"results":"14","hashOfConfig":"11"},{"size":5956,"mtime":1609124927174,"results":"15","hashOfConfig":"11"},{"size":5288,"mtime":1608034526671,"results":"16","hashOfConfig":"11"},{"size":409,"mtime":1607697970198,"results":"17","hashOfConfig":"11"},{"size":858,"mtime":1609124594996,"results":"18","hashOfConfig":"11"},{"size":263,"mtime":1609124996181,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"moc9th",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"K:\\React project\\foofaq\\src\\reducers\\index.js",[],"K:\\React project\\foofaq\\src\\components\\AdvancedFilter\\index.js",["41"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// MUI components\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n// icons\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    maxWidth: 800,\r\n    margin: \"1rem auto\",\r\n  },\r\n}));\r\n\r\nconst AdvancedFilter = ({ handleSearch }) => {\r\n  const classes = useStyles();\r\n\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [sortBy, setSortBy] = useState(\"newest\");\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value);\r\n  };\r\n\r\n  const handleSortByChange = (event) => {\r\n    setSortBy(event.target.value);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    let params = '';\r\n    if (filter !== 'all') params += `filterBy=${filter}&`;\r\n    params += `sortBy=${sortBy}`;\r\n    if (categories.length) params += `categories=${categories}`;\r\n    alert(params);\r\n    handleSearch(params);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={4}>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\">Filter By</FormLabel>\r\n              <RadioGroup\r\n                aria-label=\"filter\"\r\n                name=\"filter\"\r\n                value={filter}\r\n                onChange={handleFilterChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"all\"\r\n                  control={<Radio />}\r\n                  label=\"All\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"answered\"\r\n                  control={<Radio />}\r\n                  label=\"Answered\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"noAnswer\"\r\n                  control={<Radio />}\r\n                  label=\"No Answer\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\">Sort By</FormLabel>\r\n              <RadioGroup\r\n                aria-label=\"sortBy\"\r\n                name=\"sortBy\"\r\n                value={sortBy}\r\n                onChange={handleSortByChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"newest\"\r\n                  control={<Radio />}\r\n                  label=\"Newest\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"mostVote\"\r\n                  control={<Radio />}\r\n                  label=\"Most Vote\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"mostView\"\r\n                  control={<Radio />}\r\n                  label=\"Most View\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\">Categories</FormLabel>\r\n              <TextField id=\"standard-basic\" label=\"Categories\" />\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          startIcon={<SearchIcon />}\r\n          onClick={handleClick}\r\n        >\r\n          Search\r\n        </Button>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdvancedFilter;\r\n",["42","43"],"K:\\React project\\foofaq\\src\\common\\CustomLink.js",[],"K:\\React project\\foofaq\\src\\components\\NavigationBar\\index.js",[],"K:\\React project\\foofaq\\src\\pages\\QuestionList\\index.js",["44"],"K:\\React project\\foofaq\\src\\components\\QuestionCard\\index.js",["45"],"K:\\React project\\foofaq\\src\\common\\PageLayout\\index.js",[],["46","47"],"K:\\React project\\foofaq\\src\\index.js",[],"K:\\React project\\foofaq\\src\\pages\\QuestionList\\classes.js",[],{"ruleId":"48","severity":1,"message":"49","line":34,"column":22,"nodeType":"50","messageId":"51","endLine":34,"endColumn":35},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":null,"fatal":true,"severity":2,"message":"56","line":23,"column":3},{"ruleId":"48","severity":1,"message":"57","line":84,"column":5,"nodeType":"50","messageId":"51","endLine":84,"endColumn":10},{"ruleId":"52","replacedBy":"58"},{"ruleId":"54","replacedBy":"59"},"no-unused-vars","'setCategories' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["60"],"no-negated-in-lhs",["61"],"Parsing error: 'import' and 'export' may only appear at the top level\n\n  21 | \n  22 |   // classes\n> 23 |   import classes from './classes';\n     |   ^\n  24 | \n  25 |   useEffect(() => {\n  26 |     (async () => {","'asker' is assigned a value but never used.",["60"],["61"],"no-global-assign","no-unsafe-negation"]