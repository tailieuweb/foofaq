[{"Y:\\2_PhatTrienWeb\\foofaq\\src\\components\\QuestionForm\\index.js":"1","Y:\\2_PhatTrienWeb\\foofaq\\src\\components\\JobsGridViewManager\\index.js":"2","Y:\\2_PhatTrienWeb\\foofaq\\src\\components\\QuestionInfoDetail\\index.js":"3","Y:\\2_PhatTrienWeb\\foofaq\\src\\index.js":"4","Y:\\2_PhatTrienWeb\\foofaq\\src\\components\\FormManager\\Categories.js":"5","Y:\\2_PhatTrienWeb\\foofaq\\src\\pages\\CategoriesGridViewManager\\index.js":"6"},{"size":7395,"mtime":1608256621246,"results":"7","hashOfConfig":"8"},{"size":2146,"mtime":1608256621246,"results":"9","hashOfConfig":"8"},{"size":6559,"mtime":1608256621250,"results":"10","hashOfConfig":"8"},{"size":3078,"mtime":1608256694864,"results":"11","hashOfConfig":"8"},{"size":3864,"mtime":1608268732366,"results":"12","hashOfConfig":"8"},{"size":2402,"mtime":1608257260214,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1re90bp",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"Y:\\2_PhatTrienWeb\\foofaq\\src\\components\\QuestionForm\\index.js",["27","28","29","30"],"Y:\\2_PhatTrienWeb\\foofaq\\src\\components\\JobsGridViewManager\\index.js",[],"Y:\\2_PhatTrienWeb\\foofaq\\src\\components\\QuestionInfoDetail\\index.js",[],"Y:\\2_PhatTrienWeb\\foofaq\\src\\index.js",["31","32"],"Y:\\2_PhatTrienWeb\\foofaq\\src\\components\\FormManager\\Categories.js",["33","34"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { getCategory, AddCategory, UpdateCategory } from \"../../helpers\";\r\nimport \"./Categories.scss\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  button: {\r\n    margin: \"10px auto\",\r\n  },\r\n}));\r\n\r\nconst CategoriesForm = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useStyles();\r\n  const [category, setCategory] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [des, setDes] = useState(\"\");\r\n  let { id } = useParams();\r\n  let history = useHistory();\r\n\r\n  let handleSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  // const checkValueEmpty = () => {\r\n  //   if (name.length === \"\" || des.length === \"\") {\r\n  //     return true;\r\n  //   } else {\r\n  //     return false;\r\n  //   }\r\n  // };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const questionData = await getCategory(id);\r\n      setCategory(questionData);\r\n    })();\r\n  }, []);\r\n\r\n  if (id === undefined) {\r\n    handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      AddCategory(name, des)\r\n        .then(function (response) {\r\n          setOpen(true);\r\n          window.location.reload();\r\n        })\r\n        .catch(function (error) {\r\n          // handle error\r\n          window.location.reload();\r\n          console.log(error);\r\n        });\r\n    };\r\n  } else {\r\n    handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      UpdateCategory(id, name, des)\r\n        .then(function (response) {\r\n          history.push(\"/manager/categories\");\r\n          setOpen(true);\r\n        })\r\n        .catch(function (error) {\r\n          // handle error\r\n          window.location.reload();\r\n          console.log(error);\r\n        });\r\n    };\r\n  }\r\n\r\n  // const [names, setNames] = useState([]);\r\n  // useEffect(() => {\r\n  //   setNames(category.name);\r\n  // }, [category.name]);\r\n  // console.log(category.name);\r\n  return (\r\n    <div>\r\n      <div className=\"form-edit mr-auto ml-auto\">\r\n        <h1> Categories Form</h1>\r\n        <input\r\n          id=\"outlined-full-width\"\r\n          label=\"Name\"\r\n          className=\"form-control\"\r\n          style={{ margin: 8 }}\r\n          placeholder=\"Name...\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n          }}\r\n          defaultValue={category.name}\r\n          required\r\n        />\r\n        <textarea\r\n          id=\"outlined-full-width\"\r\n          label=\"Description\"\r\n          className=\"form-control\"\r\n          style={{ margin: 8 }}\r\n          placeholder=\"Description...\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          onChange={(e) => {\r\n            setDes(e.target.value);\r\n          }}\r\n          defaultValue={category.description}\r\n          required\r\n        />\r\n        <Button\r\n          onClick={handleSubmit}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n        >\r\n          Send\r\n        </Button>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"success\">\r\n            This is a success message!\r\n          </Alert>\r\n        </Snackbar>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoriesForm;\r\n","Y:\\2_PhatTrienWeb\\foofaq\\src\\pages\\CategoriesGridViewManager\\index.js",[],{"ruleId":"35","severity":1,"message":"36","line":158,"column":13,"nodeType":"37","endLine":164,"endColumn":4},{"ruleId":"35","severity":1,"message":"38","line":164,"column":6,"nodeType":"39","endLine":164,"endColumn":8,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":172,"column":10,"nodeType":"43","messageId":"44","endLine":172,"endColumn":22},{"ruleId":"41","severity":1,"message":"45","line":172,"column":24,"nodeType":"43","messageId":"44","endLine":172,"endColumn":40},{"ruleId":"41","severity":1,"message":"46","line":19,"column":8,"nodeType":"43","messageId":"44","endLine":19,"endColumn":26},{"ruleId":"41","severity":1,"message":"47","line":21,"column":8,"nodeType":"43","messageId":"44","endLine":21,"endColumn":29},{"ruleId":"41","severity":1,"message":"48","line":5,"column":10,"nodeType":"43","messageId":"44","endLine":5,"endColumn":14},{"ruleId":"35","severity":1,"message":"38","line":57,"column":6,"nodeType":"39","endLine":57,"endColumn":8,"suggestions":"49"},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["50"],"no-unused-vars","'editorStates' is assigned a value but never used.","Identifier","unusedVar","'setEdittorStates' is assigned a value but never used.","'CategoriesGridView' is defined but never used.","'EventsGridViewManager' is defined but never used.","'Link' is defined but never used.",["51"],{"desc":"52","fix":"53"},{"desc":"52","fix":"54"},"Update the dependencies array to be: [id]",{"range":"55","text":"56"},{"range":"57","text":"56"},[4514,4516],"[id]",[1522,1524]]