[{"D:\\foofq\\foofaq-25\\src\\index.js":"1","D:\\foofq\\foofaq-25\\src\\components\\ListNewUser\\index.js":"2","D:\\foofq\\foofaq-25\\src\\common\\PageLayout\\index.js":"3","D:\\foofq\\foofaq-25\\src\\common\\CustomLink.js":"4","D:\\foofq\\foofaq-25\\src\\components\\NavigationBar\\index.js":"5","D:\\foofq\\foofaq-25\\src\\helpers\\index.js":"6","D:\\foofq\\foofaq-25\\src\\components\\UserPagination\\index.js":"7"},{"size":879,"mtime":1608278934531,"results":"8","hashOfConfig":"9"},{"size":5250,"mtime":1608565177072,"results":"10","hashOfConfig":"9"},{"size":409,"mtime":1608276747362,"results":"11","hashOfConfig":"9"},{"size":497,"mtime":1608276747362,"results":"12","hashOfConfig":"9"},{"size":7619,"mtime":1608276747409,"results":"13","hashOfConfig":"9"},{"size":6330,"mtime":1608563321805,"results":"14","hashOfConfig":"9"},{"size":584,"mtime":1608565006447,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17uahdj",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\foofq\\foofaq-25\\src\\index.js",[],"D:\\foofq\\foofaq-25\\src\\components\\ListNewUser\\index.js",["31","32"],"D:\\foofq\\foofaq-25\\src\\common\\PageLayout\\index.js",[],"D:\\foofq\\foofaq-25\\src\\common\\CustomLink.js",[],"D:\\foofq\\foofaq-25\\src\\components\\NavigationBar\\index.js",[],"D:\\foofq\\foofaq-25\\src\\helpers\\index.js",["33"],"import axios from \"axios\";\r\n\r\nconst API_URL = \"https://5fc48ee536bc790016343a0b.mockapi.io/\";\r\n// api nay khong co du lieu (cai nay khog co ko nen su dung nua xem lai dau do)\r\nconst API_URL_NEW = \"https://5fc9a56e3c1c220016440eab.mockapi.io/\";\r\n// day chinh la api giup nhan tat ca user\r\nconst API_ALL_NEW_USER =\"https://5fdfeca2eca1780017a31013.mockapi.io/newuser\";\r\nconst API_NEW_USER =\"https://5fdfeca2eca1780017a31013.mockapi.io/newuser/1\";\r\n\r\nexport const getNewUser = async () => {\r\n  const users = await axios.get(\r\n    API_ALL_NEW_USER);\r\n  return users.data;\r\n};\r\n// cu phap nay giup ta lay duoc user/perpage\r\n//https://5fdfeca2eca1780017a31013.mockapi.io/newuser?page=1&limit=10\r\nexport const getAllNewUserPagination = async (page,limit) => {\r\n  const users = await axios.get(\r\n    API_ALL_NEW_USER + `?page=${page}&limit=${limit}`\r\n  );\r\n  return users.data;\r\n}\r\n\r\n\r\nexport const getQuestions = async (\r\n  keyword,\r\n\r\n  status\r\n) => {\r\n  const question = await axios.get(\r\n    API_URL + `questions?search=${keyword}&${status}`\r\n  );\r\n  return question.data;\r\n};\r\n//get all question\r\n\r\nexport const getAllQuestions = async (keyword, page, perPage) => {\r\n  const question = await axios.get(\r\n    API_URL + `questions?search=${keyword}&page=${page}&limit=${perPage}`\r\n  );\r\n  return question.data;\r\n};\r\n//get all question status=false\r\nexport const allQuestion = async () => {\r\n  const question = await axios.get(API_URL + `questions?status=false`);\r\n  return question.data;\r\n};\r\n\r\nexport const getAllQuesiton = async (keyword) => {\r\n  const question = await axios.get(API_URL + `questions?search=${keyword}`);\r\n  return question.data;\r\n};\r\n\r\nexport const getQuesitonById = async (id) => {\r\n  const question = await axios.get(API_URL + `questions/${id}`);\r\n  return question.data;\r\n};\r\n\r\nexport const approveQuestion = async (id, status) => {\r\n  const quetionApproval = await axios.put(API_URL + `questions/${id}`, {\r\n    status: status,\r\n  });\r\n  return quetionApproval.data;\r\n};\r\nexport const questionApprovalDetail = async (id) => {\r\n  const questionApprovalDetail = await axios.get(API_URL + \"questions/\" + id);\r\n  return questionApprovalDetail.data;\r\n};\r\nexport const declineQuestion = async (id) => {\r\n  const user = await axios.delete(API_URL + \"questions/\" + id);\r\n  return user.data;\r\n};\r\n\r\n//get categories\r\nexport const getCategories = async (keyword, page, perPage) => {\r\n  const question = await axios.get(\r\n    API_URL + `categories?search=${keyword}&page=${page}&limit=${perPage}  `\r\n  );\r\n  return question.data;\r\n};\r\nexport const pagCategories = async () => {\r\n  const question = await axios.get(API_URL + `categories`);\r\n  return question.data;\r\n};\r\n//get 1 category\r\nexport const getCategory = async (id) => {\r\n  const question = await axios.get(API_URL + `categories/${id}`);\r\n  return question.data;\r\n};\r\n//categories delete\r\nexport const DeleteCategory = async (id) => {\r\n  const user = await axios.delete(API_URL + \"categories/\" + id);\r\n  return user.data;\r\n};\r\n//categories upadate\r\n\r\nexport const UpdateCategory = async (id, name, description) => {\r\n  const user = await axios.put(API_URL + \"categories/\" + id, {\r\n    name,\r\n    description,\r\n  });\r\n  return user.data;\r\n};\r\n\r\n//categories post\r\n\r\nexport const AddCategory = async (name, description) => {\r\n  const user = await axios.post(API_URL + \"categories\", { name, description });\r\n  return user.data;\r\n};\r\n//Jobs\r\nexport const getJobs = async (keyword, page, perPage) => {\r\n  const res = await axios.get(\r\n    API_URL_NEW + `jobs?search=${keyword}&page=${page}&limit=${perPage}`\r\n  );\r\n  return res.data;\r\n};\r\n\r\nexport const getJobsSearch = async (keyword) => {\r\n  const res = await axios.get(API_URL_NEW + `jobs?search=${keyword}`);\r\n  return res.data;\r\n};\r\n//GET ALL JOBS FOR PAGINATION\r\nexport const pagJobs = async () => {\r\n  const res = await axios.get(API_URL_NEW + `jobs`);\r\n  return res.data;\r\n};\r\nexport const getJob = async (id) => {\r\n  const res = await axios.get(API_URL_NEW + \"jobs/\" + id);\r\n  return res.data;\r\n};\r\nexport const deleteJob = async (id) => {\r\n  const res = await axios.delete(API_URL_NEW + \"jobs/\" + id);\r\n  return res.data;\r\n};\r\n\r\nexport const addJobs = async (\r\n  id,\r\n  name,\r\n  description,\r\n  type,\r\n  area,\r\n  company,\r\n  experience,\r\n  role\r\n) => {\r\n  const res = await axios.post(API_URL_NEW + \"jobs\", {\r\n    name,\r\n    description,\r\n    type,\r\n    area,\r\n    company,\r\n    experience,\r\n    role,\r\n  });\r\n  return res.data;\r\n};\r\nexport const updateJobs = async (\r\n  id,\r\n  name,\r\n  description,\r\n  type,\r\n  area,\r\n  company,\r\n  experience,\r\n  role\r\n) => {\r\n  const res = await axios.put(API_URL_NEW + \"jobs/\" + id, {\r\n    name,\r\n    description,\r\n    type,\r\n    area,\r\n    company,\r\n    experience,\r\n    role,\r\n  });\r\n  return res.data;\r\n};\r\n\r\n//Event\r\nexport const getEvents = async (keyword, page, perPage) => {\r\n  const res = await axios.get(\r\n    API_URL_NEW + `events?search=${keyword}&page=${page}&limit=${perPage}`\r\n  );\r\n  return res.data;\r\n};\r\nexport const getEventsSearch = async (keyword) => {\r\n  const res = await axios.get(API_URL_NEW + `events?search=${keyword}`);\r\n  return res.data;\r\n};\r\n//getAllEvent\r\nexport const pagEnvent = async () => {\r\n  const res = await axios.get(API_URL_NEW + `events`);\r\n  return res.data;\r\n};\r\n\r\nexport const getEvent = async (id) => {\r\n  const res = await axios.get(API_URL_NEW + \"events/\" + id);\r\n  return res.data;\r\n};\r\nexport const deleteEvent = async (id) => {\r\n  const res = await axios.delete(API_URL_NEW + \"events/\" + id);\r\n  return res.data;\r\n};\r\nexport const addEvent = async (name, image, date, description) => {\r\n  const res = await axios.post(API_URL_NEW + \"events\", {\r\n    name,\r\n    image,\r\n    date,\r\n    description,\r\n  });\r\n  return res.data;\r\n};\r\nexport const updateEvent = async (id, name, image, date, description) => {\r\n  const res = await axios.put(API_URL_NEW + \"events/\" + id, {\r\n    name,\r\n    image,\r\n    date,\r\n    description,\r\n  });\r\n  return res.data;\r\n};\r\n\r\nexport const getAnswers = async (questionId) => {\r\n  const answers = await axios.get(API_URL + `questions/${questionId}/answers`);\r\n  return answers.data;\r\n};\r\n\r\nexport const addAnswers = async (questionId, content) => {\r\n  const answer = await axios.post(API_URL + `questions/${questionId}/answers`, {\r\n    questionId,\r\n    content,\r\n  });\r\n  return answer.data;\r\n};\r\n","D:\\foofq\\foofaq-25\\src\\components\\UserPagination\\index.js",[],{"ruleId":"34","severity":1,"message":"35","line":47,"column":11,"nodeType":"36","endLine":52,"endColumn":13},{"ruleId":"37","severity":1,"message":"38","line":67,"column":15,"nodeType":"36","endLine":67,"endColumn":27},{"ruleId":"39","severity":1,"message":"40","line":8,"column":7,"nodeType":"41","messageId":"42","endLine":8,"endColumn":19},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'API_NEW_USER' is assigned a value but never used.","Identifier","unusedVar"]